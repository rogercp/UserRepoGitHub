{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Roger\\\\Code\\\\Projects\\\\sortingRepo\\\\sorting\\\\src\\\\components\\\\Bubble.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport { gsap } from 'gsap';\nimport '../App.css';\n\nconst randomListOfNums = n => {\n  const nums = [];\n\n  for (let i = 0; i < n; i++) {\n    let randomNum = Math.floor(Math.random() * 25) + 1;\n    nums.push(randomNum);\n  }\n\n  return nums;\n};\n\nfunction Bubble() {\n  const [values, setValues] = useState(randomListOfNums(5));\n  const [mobileValues, setMobileValues] = useState(randomListOfNums(5));\n  const revealsRef = React.useRef([]);\n  let newArrayState = revealsRef.current = [];\n  const [revealsRefs, setRevealsRefs] = useState(newArrayState);\n  console.log(values, \"values\"); // revealsRefs = [];\n\n  const revealsRefMobile = React.useRef([]);\n  revealsRefMobile.current = [];\n  const useEffect = (() => {}, []);\n\n  const bubbleSort = async () => {\n    console.log(revealsRefs, \"revealsrefs\");\n    const masterTimeLine = gsap.timeline();\n    let iterator = 1;\n    var swapped = true;\n\n    while (swapped) {\n      swapped = false;\n\n      for (var i = 0; i < revealsRefs.length - 1; i++) {\n        let num1 = Number(revealsRefs[i].innerText);\n        let num2 = Number(revealsRefs[i + 1].innerText);\n\n        if (num1 > num2) {\n          await iterationanimation(i, i + 1, iterator++);\n          var temp = revealsRefs[i];\n          setRevealsRefs(revealsRefs[i] = revealsRefs[i + 1]);\n          setRevealsRefs(revealsRefs[i + 1] = temp);\n          var temp = values[i]; // setValues(values[i] =  values[i+1]);\n          // setValues(values[i+1] = temp);\n\n          setValues(items => {\n            const vals = [...values];\n            vals[i] = vals[i + 1];\n            values = vals;\n          });\n          setValues(items => {\n            const vals = [...values];\n            vals[i + 1] = vals;\n            values = vals;\n          });\n          console.log(values, \"values\");\n          console.log(values, \"values\");\n          swapped = true;\n        } else {\n          await iterationanimationNoSwap(i, i + 1);\n          iterator = 1;\n        }\n      }\n    }\n\n    onAnimateFloopfy();\n  };\n\n  const iterationanimationNoSwap = (current, next) => {\n    const rect = revealsRefs[current].getBoundingClientRect();\n    console.log(rect.top, rect.right, rect.bottom, rect.left);\n    const rect2 = revealsRefs[next].getBoundingClientRect();\n    console.log(rect2.top, rect2.right, rect2.bottom, rect2.left);\n    let tl = gsap.timeline({\n      autoRemoveChildren: true\n    });\n    tl.to(revealsRefs[current], {\n      backgroundColor: \"blue\"\n    }).to(revealsRefs[next], .5, {\n      backgroundColor: \"blue\"\n    }).to(revealsRefs[current], 0.1, {\n      backgroundColor: \"blue\",\n      y: 400,\n      delay: 0.5\n    }).to(revealsRefs[next], 0.1, {\n      backgroundColor: \"blue\",\n      y: 400,\n      delay: 0.5\n    }).to(revealsRefs[current], 0.1, {\n      y: -(rect2.bottom - rect2.top + revealsRefs[next]),\n      delay: 0.5,\n      backgroundColor: \"cadetblue\"\n    }).to(revealsRefs[next], 0.1, {\n      y: -(rect.bottom - rect.top + revealsRefs[current]),\n      delay: 0.5,\n      backgroundColor: \"cadetblue\"\n    });\n    return tl;\n  };\n\n  const iterationanimation = (current, next, iterator) => {\n    const rect = revealsRefs[current].getBoundingClientRect();\n    const rect2 = revealsRefs[next].getBoundingClientRect();\n    let tl2 = gsap.timeline({\n      autoRemoveChildren: true\n    });\n    tl2.to(revealsRefs[current], {\n      backgroundColor: \"blue\"\n    }).to(revealsRefs[next], .5, {\n      backgroundColor: \"blue\"\n    }).to(revealsRefs[current], 0.1, {\n      backgroundColor: \"blue\",\n      y: 400,\n      delay: 0.5\n    }).to(revealsRefs[next], 0.1, {\n      backgroundColor: \"blue\",\n      y: 400,\n      delay: 0.5\n    }).to(revealsRefs[current], 0.1, {\n      x: (rect2.right - rect.right) * iterator,\n      delay: 0.5\n    }, \"-=.5\").to(revealsRefs[next], 0.1, {\n      x: -(rect2.left - rect.left),\n      delay: 0.5\n    }, \"-=.5\").to(revealsRefs[current], 0.1, {\n      y: -(rect2.bottom - rect2.top + revealsRefs[next]),\n      delay: 0.5,\n      backgroundColor: \"cadetblue\"\n    }).to(revealsRefs[next], 0.1, {\n      y: -(rect.bottom - rect.top + revealsRefs[current]),\n      delay: 0.5,\n      backgroundColor: \"cadetblue\"\n    });\n    return tl2;\n  };\n\n  const initialize = () => {\n    bubbleSort();\n  };\n\n  const addToRefs = el => {\n    if (el && !newArrayState.includes(el)) {\n      newArrayState.push(el);\n    }\n  };\n\n  const addToRefsMobile = el => {\n    if (el && !revealsRefMobile.current.includes(el)) {\n      revealsRefMobile.current.push(el);\n    }\n  };\n\n  const onAnimate1 = () => {\n    const rect = revealsRefs.current[0].getBoundingClientRect();\n    console.log(rect.top, rect.right, rect.bottom, rect.left);\n    const rect2 = revealsRefs.current[10].getBoundingClientRect();\n    console.log(rect2.top, rect2.right, rect2.bottom, rect2.left);\n    let tl = gsap.timeline();\n    let another = gsap.timeline();\n    tl.to(revealsRefs.current[0], {\n      backgroundColor: \"blue\"\n    }).to(revealsRefs.current[10], 1, {\n      backgroundColor: \"blue\"\n    }).to(revealsRefs.current[0], 0.9, {\n      backgroundColor: \"blue\",\n      y: 400,\n      delay: 0.5\n    }).to(revealsRefs.current[10], 0.9, {\n      backgroundColor: \"blue\",\n      y: 400,\n      delay: 0.5\n    }).to(revealsRefs.current[0], 0.9, {\n      x: rect2.right - rect.right,\n      delay: 0.5\n    }, \"-=.5\").to(revealsRefs.current[10], 0.9, {\n      x: -(rect2.right - rect.right),\n      delay: 0.5\n    }, \"-=.5\").to(revealsRefs.current[0], 0.9, {\n      y: -(rect2.bottom - rect2.top + revealsRefs.current[10]),\n      delay: 0.5,\n      backgroundColor: \"cadetblue\"\n    }).to(revealsRefs.current[10], 0.9, {\n      y: -(rect.bottom - rect.top + revealsRefs.current[0]),\n      delay: 0.5,\n      backgroundColor: \"cadetblue\"\n    });\n  };\n\n  const onAnimate2 = () => {\n    const rect = revealsRefMobile.current[0].getBoundingClientRect();\n    console.log(rect.top, rect.right, rect.bottom, rect.left);\n    const rect2 = revealsRefMobile.current[10].getBoundingClientRect();\n    console.log(rect2.top, rect2.right, rect2.bottom, rect2.left);\n    let tl = gsap.timeline();\n    tl.to(revealsRefs[0], {\n      backgroundColor: \"blue\"\n    }).to(revealsRefs[10], 1, {\n      backgroundColor: \"blue\"\n    }).to(revealsRefMobile.current[0], 0.9, {\n      x: 200,\n      delay: 0.5,\n      backgroundColor: \"blue\"\n    }).to(revealsRefMobile.current[10], 0.9, {\n      x: 200,\n      delay: 0.5,\n      backgroundColor: \"blue\"\n    }).to(revealsRefMobile.current[0], 0.9, {\n      y: rect2.bottom - rect.bottom,\n      delay: 0.5\n    }, \"-=.5\").to(revealsRefMobile.current[10], 0.9, {\n      y: -(rect2.bottom - rect.bottom),\n      delay: 0.5\n    }, \"-=.5\").to(revealsRefMobile.current[0], 0.9, {\n      x: -(rect2.bottom - rect2.top + revealsRefMobile.current[10]),\n      delay: 0.5,\n      backgroundColor: \"cadetblue\"\n    }).to(revealsRefMobile.current[10], 0.9, {\n      x: -(rect.bottom - rect.top + revealsRefs[0]),\n      delay: 0.5,\n      backgroundColor: \"cadetblue\"\n    });\n  };\n\n  const onAnimateFloopfy = () => {\n    let tl = gsap.timeline();\n\n    for (let i = 0; i < revealsRefs.length; i++) {\n      tl.to(revealsRefs[i], 0.1, {\n        y: 100,\n        duration: 2\n      }).to(revealsRefs[i], 0.1, {\n        y: -10,\n        duration: 2\n      });\n    }\n\n    for (let i = 0; i < revealsRefs.length; i++) {\n      tl.to(revealsRefs[i], 0.01, {\n        y: 100,\n        duration: 2\n      }).to(revealsRefs[i], 0.01, {\n        y: -10,\n        duration: 2\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"insertion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 5\n    }\n  }, \"Insertion Sort\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: initialize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 5\n    }\n  }, \"Run1\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onAnimate2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 1\n    }\n  }, \"Run2\"), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"blocksNumberWeb\",\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      width: \"1200px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 2\n    }\n  }, values.map((num, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"blocksNumber\",\n      key: num,\n      ref: addToRefs,\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"100%\",\n        alignItems: \"center\",\n        height: \"100vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        margin: \"1px\",\n        padding: \"1px\",\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 10\n      }\n    }, num)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"block\",\n      style: {\n        height: `${num * 10}px`,\n        backgroundColor: \"ivory\",\n        margin: \"5px\",\n        width: \"80%\"\n      },\n      onClick: onAnimateFloopfy,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 10\n      }\n    }));\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"blocksNumberMobile\",\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      width: \"100vw\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 2\n    }\n  }, values.map((num, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"blocksNumber\",\n      key: num,\n      ref: addToRefsMobile,\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        width: \"100%\",\n        alignItems: \"center\",\n        margin: \"0\",\n        padding: \"0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        margin: \"2px\",\n        padding: \"2px\",\n        fontSize: \"11px\",\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 10\n      }\n    }, num)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"block\",\n      style: {\n        width: `${num * 6}px`,\n        backgroundColor: \"ivory\",\n        marginLeft: \"5px\",\n        padding: \"0\",\n        height: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 10\n      }\n    }));\n  })));\n}\n\nexport default Bubble;","map":{"version":3,"sources":["C:/Users/Roger/Code/Projects/sortingRepo/sorting/src/components/Bubble.js"],"names":["React","useEffect","useRef","useState","gsap","randomListOfNums","n","nums","i","randomNum","Math","floor","random","push","Bubble","values","setValues","mobileValues","setMobileValues","revealsRef","newArrayState","current","revealsRefs","setRevealsRefs","console","log","revealsRefMobile","bubbleSort","masterTimeLine","timeline","iterator","swapped","length","num1","Number","innerText","num2","iterationanimation","temp","items","vals","iterationanimationNoSwap","onAnimateFloopfy","next","rect","getBoundingClientRect","top","right","bottom","left","rect2","tl","autoRemoveChildren","to","backgroundColor","y","delay","tl2","x","initialize","addToRefs","el","includes","addToRefsMobile","onAnimate1","another","onAnimate2","duration","display","flexDirection","width","map","num","index","alignItems","height","margin","padding","color","justifyContent","fontSize","marginLeft"],"mappings":"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","sourcesContent":["import React,{useEffect,useRef,useState}  from 'react';\r\nimport {gsap} from 'gsap';\r\nimport '../App.css';\r\n\r\n\r\nconst randomListOfNums =(n)=>\r\n{\r\n    const nums = [];\r\n\r\n    for( let i =0; i<n; i++)\r\n    {\r\n        let randomNum = Math.floor(Math.random() * 25) + 1;\r\n\r\n        nums.push(randomNum);\r\n\r\n    }\r\n\r\n    return nums;   \r\n\r\n}\r\n\r\nfunction Bubble() {\r\n\r\n    const [values, setValues] = useState(randomListOfNums(5))\r\n\r\n    const [mobileValues, setMobileValues] = useState(randomListOfNums(5))\r\n\r\n    const revealsRef = React.useRef([]);\r\n\r\n    let newArrayState =  revealsRef.current = []\r\n\r\n    const [revealsRefs,setRevealsRefs] = useState(newArrayState);\r\n\r\n\r\n          console.log(values,\"values\")\r\n\r\n\r\n\r\n    // revealsRefs = [];\r\n\r\n    const revealsRefMobile= React.useRef([]);\r\n    revealsRefMobile.current = [];\r\n\r\n\r\n\r\n\r\n\r\n    const useEffect=(()=>\r\n    {\r\n\r\n      \r\n\r\n    },[]);\r\n\r\n\r\n\r\n      \r\nconst  bubbleSort = async () =>\r\n{\r\n\r\n  console.log(revealsRefs,\"revealsrefs\")\r\n\r\nconst masterTimeLine = gsap.timeline()\r\n\r\nlet iterator = 1;\r\nvar swapped = true;\r\n\r\n\r\n  \twhile (swapped){\r\n\r\n    swapped = false;\r\n\r\n\t\tfor(var i=0 ; i<revealsRefs.length-1; i++){\r\n\r\n      let num1 = Number(revealsRefs[i].innerText);\r\n\r\n      let num2 = Number(revealsRefs[i+1].innerText);\r\n\r\n\t\t\tif( num1 > num2){\r\n\r\n        await iterationanimation(i,i+1,iterator++);\r\n\r\n        var temp = revealsRefs[i];\r\n        \r\n        setRevealsRefs(revealsRefs[i] = revealsRefs[i+1]);\r\n        \r\n        setRevealsRefs(revealsRefs[i+1] = temp);\r\n\r\n        \r\n        var temp = values[i];\r\n        \r\n        // setValues(values[i] =  values[i+1]);\r\n        \r\n        // setValues(values[i+1] = temp);\r\n\r\n        setValues(items =>{\r\n\r\n          const vals = [...values]\r\n\r\n          vals[i] = vals[i+1];\r\n\r\n          values = vals\r\n\r\n        })\r\n\r\n        setValues(items=>{\r\n\r\n          const vals = [...values]\r\n\r\n          vals[i+1] = vals;\r\n\r\n          values =  vals\r\n\r\n\r\n        })\r\n\r\n        console.log(values,\"values\")\r\n\r\n\r\n        console.log(values,\"values\")\r\n        swapped = true;\r\n\r\n\r\n      }else\r\n      {\r\n         await iterationanimationNoSwap(i,i+1);\r\n\r\n          iterator = 1;\r\n      }\r\n \r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n  onAnimateFloopfy();\r\n\r\n\r\n}\r\n\r\nconst iterationanimationNoSwap= (current,next)=>{\r\n\r\n\r\n\r\n        const rect = revealsRefs[current].getBoundingClientRect();\r\n        console.log(rect.top, rect.right, rect.bottom, rect.left)\r\n\r\n        const rect2 = revealsRefs[next].getBoundingClientRect();\r\n        console.log(rect2.top, rect2.right, rect2.bottom, rect2.left)\r\n\r\n        let tl = gsap.timeline({autoRemoveChildren: true}); \r\n\r\n         tl.to(revealsRefs[current], {backgroundColor:\"blue\"})\r\n        .to(revealsRefs[next], .5, {backgroundColor:\"blue\"})\r\n        \r\n        .to(revealsRefs[current], 0.1, {backgroundColor:\"blue\",y: 400,delay: 0.5})\r\n        .to(revealsRefs[next], 0.1, {backgroundColor:\"blue\",y: 400,delay: 0.5})\r\n\r\n        .to(revealsRefs[current], 0.1, {y: -(rect2.bottom-rect2.top+ revealsRefs[next]),delay: 0.5,backgroundColor:\"cadetblue\"})\r\n        .to(revealsRefs[next], 0.1, {y: -(rect.bottom-rect.top +revealsRefs[current]),delay: 0.5,backgroundColor:\"cadetblue\"})\r\n\r\n        return tl;\r\n\r\n\r\n        \r\n}\r\n\r\n\r\nconst iterationanimation= (current,next,iterator)=>{\r\n\r\n  const rect = revealsRefs[current].getBoundingClientRect();\r\n  const rect2 = revealsRefs[next].getBoundingClientRect();\r\n\r\n  let tl2 = gsap.timeline({autoRemoveChildren: true}); \r\n\r\n  tl2.to(revealsRefs[current], {backgroundColor:\"blue\"})\r\n  .to(revealsRefs[next], .5, {backgroundColor:\"blue\"})\r\n  \r\n  .to(revealsRefs[current], 0.1, {backgroundColor:\"blue\",y: 400,delay: 0.5})\r\n  .to(revealsRefs[next], 0.1, {backgroundColor:\"blue\",y: 400,delay: 0.5})\r\n\r\n  .to(revealsRefs[current], 0.1, {x:  ((rect2.right-rect.right)*iterator),delay: 0.5},\"-=.5\")\r\n  .to(revealsRefs[next], 0.1, {x: -((rect2.left-rect.left)),delay: 0.5},\"-=.5\")\r\n  \r\n  .to(revealsRefs[current], 0.1, {y: -(rect2.bottom-rect2.top+ revealsRefs[next]),delay: 0.5,backgroundColor:\"cadetblue\"})\r\n  .to(revealsRefs[next], 0.1, {y: -(rect.bottom-rect.top +revealsRefs[current]),delay: 0.5,backgroundColor:\"cadetblue\"})\r\n\r\n  return tl2;\r\n\r\n}\r\n\r\n\r\n\r\nconst initialize  = ()=>{\r\n\r\nbubbleSort();\r\n\r\n}\r\n\r\n\r\nconst addToRefs = (el) =>\r\n{\r\n\r\n    if(el && !newArrayState.includes(el))\r\n    {\r\n      newArrayState.push(el);\r\n    }\r\n\r\n}\r\n\r\nconst addToRefsMobile = (el) =>\r\n{\r\n\r\n    if(el && !revealsRefMobile.current.includes(el))\r\n    {\r\n        revealsRefMobile.current.push(el);\r\n    }\r\n}\r\n\r\n\r\nconst onAnimate1 = () => {\r\n\r\n\r\n        const rect = revealsRefs.current[0].getBoundingClientRect();\r\n        console.log(rect.top, rect.right, rect.bottom, rect.left)\r\n\r\n        const rect2 = revealsRefs.current[10].getBoundingClientRect();\r\n        console.log(rect2.top, rect2.right, rect2.bottom, rect2.left)\r\n\r\n        let tl = gsap.timeline(); \r\n\r\n        let another = gsap.timeline();\r\n\r\n        tl.to(revealsRefs.current[0], {backgroundColor:\"blue\"})\r\n        .to(revealsRefs.current[10], 1, {backgroundColor:\"blue\"})\r\n        \r\n        .to(revealsRefs.current[0], 0.9, {backgroundColor:\"blue\",y: 400,delay: 0.5})\r\n        .to(revealsRefs.current[10], 0.9, {backgroundColor:\"blue\",y: 400,delay: 0.5})\r\n    \r\n        .to(revealsRefs.current[0], 0.9, {x:  (rect2.right-rect.right),delay: 0.5},\"-=.5\")\r\n        .to(revealsRefs.current[10], 0.9, {x: -(rect2.right-rect.right) ,delay: 0.5},\"-=.5\")\r\n        \r\n        .to(revealsRefs.current[0], 0.9, {y: -(rect2.bottom-rect2.top+ revealsRefs.current[10]),delay: 0.5,backgroundColor:\"cadetblue\"})\r\n        .to(revealsRefs.current[10], 0.9, {y: -(rect.bottom-rect.top +revealsRefs.current[0]),delay: 0.5,backgroundColor:\"cadetblue\"});\r\n    \r\n        \r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nconst onAnimate2 = () => {\r\n\r\n\r\n\r\n    const rect = revealsRefMobile.current[0].getBoundingClientRect();\r\n    console.log(rect.top, rect.right, rect.bottom, rect.left)\r\n\r\n    const rect2 = revealsRefMobile.current[10].getBoundingClientRect();\r\n    console.log(rect2.top, rect2.right, rect2.bottom, rect2.left)\r\n\r\n\r\n    let tl = gsap.timeline(); \r\n\r\n\r\n    tl.to(revealsRefs[0], {backgroundColor:\"blue\"})\r\n    .to(revealsRefs[10], 1, {backgroundColor:\"blue\"})\r\n    \r\n    \r\n    .to(revealsRefMobile.current[0], 0.9, {x: 200,delay: 0.5,backgroundColor:\"blue\"})\r\n    .to(revealsRefMobile.current[10], 0.9, {x: 200,delay: 0.5,backgroundColor:\"blue\"})\r\n\r\n    .to(revealsRefMobile.current[0],  0.9,{y:  (rect2.bottom-rect.bottom),delay: 0.5},\"-=.5\")\r\n    .to(revealsRefMobile.current[10],  0.9,{y: -(rect2.bottom-rect.bottom) ,delay: 0.5},\"-=.5\")\r\n    \r\n    .to(revealsRefMobile.current[0], 0.9, {x: -(rect2.bottom-rect2.top+ revealsRefMobile.current[10]),delay: 0.5,backgroundColor:\"cadetblue\"})\r\n    .to(revealsRefMobile.current[10], 0.9, {x: -(rect.bottom-rect.top +revealsRefs[0]),delay: 0.5,backgroundColor:\"cadetblue\"});\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nconst onAnimateFloopfy = () => {\r\n\r\n\r\n  let tl = gsap.timeline(); \r\n\r\n\r\n  for(let i = 0 ;i<revealsRefs.length;i++)\r\n  {\r\n      \r\n      tl.to(revealsRefs[i], 0.1, {y: 100,duration:2})\r\n      .to(revealsRefs[i], 0.1, {y: -10,duration:2});\r\n  }\r\n\r\n  \r\n  for(let i = 0 ;i<revealsRefs.length;i++)\r\n  {\r\n      \r\n      tl.to(revealsRefs[i], 0.01, {y: 100,duration:2})\r\n      .to(revealsRefs[i], 0.01, {y: -10,duration:2});\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"insertion\" >\r\n\r\n    <p >Insertion Sort</p>\r\n\r\n    <button onClick={initialize}>Run1</button>\r\n\r\n<button onClick={onAnimate2}>Run2</button>\r\n\r\n <section className=\"blocksNumberWeb\" style={{display:\"flex\", flexDirection:\"row\",width:\"1200px\"}}>\r\n\r\n  {values.map((num,index)=>{\r\n\r\n     return (\r\n         <div className=\"blocksNumber\"  key={num} ref={addToRefs}  style={{display:\"flex\", flexDirection:\"column\",width:\"100%\",alignItems:\"center\",height:\"100vh\"}}>\r\n\r\n         \r\n         <div>\r\n\r\n         <p style={{margin:\"1px\",padding:\"1px\",color:\"white\"}} >{num}</p>\r\n\r\n         </div>\r\n\r\n         <div \r\n        \r\n         className=\"block\"\r\n         style={{height:`${num*10}px`, backgroundColor:\"ivory\",margin:\"5px\",width:\"80%\"}}\r\n     \r\n         onClick={onAnimateFloopfy}\r\n         >\r\n\r\n         </div>\r\n         </div>\r\n     )\r\n\r\n  })}\r\n\r\n </section>\r\n\r\n <section className=\"blocksNumberMobile\" style={{display:\"flex\", flexDirection:\"column\",width:\"100vw\",justifyContent:\"center\",alignItems:\"center\" }}>\r\n\r\n     {values.map((num,index)=>{\r\n\r\n     return (\r\n         <div className=\"blocksNumber\"   key={num} ref={addToRefsMobile} style={{display:\"flex\", flexDirection:\"row\",width:\"100%\", alignItems:\"center\",margin:\"0\",padding:\"0\"}}>\r\n\r\n         <div >\r\n\r\n         <p style={{margin:\"2px\",padding:\"2px\",fontSize:\"11px\",color:\"white\"}} >{num}</p>\r\n\r\n         </div>\r\n\r\n         <div \r\n\r\n         className=\"block\"\r\n         style={{width:`${num*6}px`, backgroundColor:\"ivory\",marginLeft:\"5px\",padding:\"0\",height:\"10px\"}}\r\n         \r\n         >\r\n             \r\n         </div>\r\n         </div>\r\n     )\r\n\r\n     })}\r\n\r\n</section>\r\n\r\n</div>\r\n  );\r\n}\r\n\r\nexport default Bubble;\r\n"]},"metadata":{},"sourceType":"module"}