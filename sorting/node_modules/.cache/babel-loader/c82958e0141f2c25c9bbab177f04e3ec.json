{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Roger\\\\Code\\\\Projects\\\\sortingRepo\\\\sorting\\\\src\\\\components\\\\Bubble.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport { gsap } from 'gsap';\nimport '../App.css';\n\nconst randomListOfNums = n => {\n  const nums = [];\n\n  for (let i = 0; i < n; i++) {\n    let randomNum = Math.floor(Math.random() * 25) + 1;\n    nums.push(randomNum);\n  }\n\n  return nums;\n};\n\nfunction Bubble() {\n  const myVals = randomListOfNums(5);\n  const [values, setValues] = useState(myVals);\n  const [mobileValues, setMobileValues] = useState(randomListOfNums(5));\n  const revealsRef = React.useRef([]);\n  let newArrayState = revealsRef.current = [];\n  const [revealsRefs, setRevealsRefs] = useState(newArrayState);\n  const [trigger, setTrigger] = useState(false);\n  console.log(values, \"values\"); // revealsRefs = [];\n\n  const revealsRefMobile = React.useRef([]);\n  revealsRefMobile.current = [];\n  const useEffect = (() => {}, []);\n\n  const bubbleSort = async () => {\n    // const masterTimeLine = gsap.timeline()\n    let iterator = 1;\n    var swapped = true;\n\n    while (swapped) {\n      swapped = false;\n\n      for (var i = 0; i < revealsRefs.length - 1; i++) {\n        let num1 = Number(revealsRefs[i].innerText);\n        let num2 = Number(revealsRefs[i + 1].innerText);\n\n        if (num1 > num2) {\n          await iterationanimation(i, i + 1, iterator);\n          var temp2 = revealsRefs[i];\n          revealsRefs[i] = revealsRefs[i + 1];\n          revealsRefs[i + 1] = temp2;\n          swapped = true;\n          iterator++;\n        } else {\n          await iterationanimationNoSwap(i, i + 1);\n          iterator = 1;\n        }\n      }\n\n      setTrigger(true);\n    } // onAnimateFloopfy();\n\n  };\n\n  const iterationanimationNoSwap = (current, next) => {\n    const rect = newArrayState[current].getBoundingClientRect();\n    console.log(rect.top, rect.right, rect.bottom, rect.left);\n    const rect2 = newArrayState[next].getBoundingClientRect();\n    console.log(rect2.top, rect2.right, rect2.bottom, rect2.left);\n    let tl = gsap.timeline({\n      autoRemoveChildren: true\n    });\n    tl.to(newArrayState[current], {\n      backgroundColor: \"blue\"\n    }).to(newArrayState[next], .5, {\n      backgroundColor: \"blue\"\n    }).to(newArrayState[current], 0.1, {\n      backgroundColor: \"blue\",\n      y: 400,\n      delay: 0.5\n    }).to(newArrayState[next], 0.1, {\n      backgroundColor: \"blue\",\n      y: 400,\n      delay: 0.5\n    }).to(newArrayState[current], 0.1, {\n      y: -(rect2.bottom - rect2.top + newArrayState[next]),\n      delay: 0.5,\n      backgroundColor: \"cadetblue\"\n    }).to(newArrayState[next], 0.1, {\n      y: -(rect.bottom - rect.top + newArrayState[current]),\n      delay: 0.5,\n      backgroundColor: \"cadetblue\"\n    });\n    return tl;\n  };\n\n  let myObj = {};\n\n  const iterationanimation = (current, next, iterator) => {\n    console.log(myObj, \"myObj\");\n\n    if (myObj[current] || myObj[next]) {\n      console.log(\"hittingartatertert\");\n\n      if (myObj[next] === true) {\n        const rect = revealsRefs[current].getBoundingClientRect();\n        const rect2 = revealsRefs[next].getBoundingClientRect();\n        let tl2 = gsap.timeline({\n          autoRemoveChildren: true\n        });\n        tl2.to(revealsRefs[current], {\n          backgroundColor: \"blue\"\n        }).to(revealsRefs[next], .5, {\n          backgroundColor: \"blue\"\n        }).to(revealsRefs[current], 0.1, {\n          backgroundColor: \"blue\",\n          y: 400,\n          delay: 0.5\n        }).to(revealsRefs[next], 0.1, {\n          backgroundColor: \"blue\",\n          y: 400,\n          delay: 0.5\n        }).to(revealsRefs[current], 0.1, {\n          x: (rect2.right - rect.right) * iterator,\n          delay: 0.5\n        }, \"-=.5\").to(revealsRefs[next], 0.1, {\n          x: -(rect2.right - rect.right),\n          delay: 0.5\n        }, \"-=.5\").to(revealsRefs[current], 0.1, {\n          y: -(rect2.bottom - rect2.top + revealsRefs[next]),\n          delay: 0.5,\n          backgroundColor: \"cadetblue\"\n        }).to(revealsRefs[next], 0.1, {\n          y: -(rect.bottom - rect.top + revealsRefs[current]),\n          delay: 0.5,\n          backgroundColor: \"cadetblue\"\n        });\n        return tl2;\n      } else if (myObj[current] === true) {\n        const rect = revealsRefs[current].getBoundingClientRect();\n        const rect2 = revealsRefs[next].getBoundingClientRect();\n        let tl2 = gsap.timeline({\n          autoRemoveChildren: true\n        });\n        tl2.to(revealsRefs[current], {\n          backgroundColor: \"blue\"\n        }).to(revealsRefs[next], .5, {\n          backgroundColor: \"blue\"\n        }).to(revealsRefs[current], 0.1, {\n          backgroundColor: \"blue\",\n          y: 400,\n          delay: 0.5\n        }).to(revealsRefs[next], 0.1, {\n          backgroundColor: \"blue\",\n          y: 400,\n          delay: 0.5\n        }).to(revealsRefs[current], 0.1, {\n          x: rect2.right - rect.right,\n          delay: 0.5\n        }, \"-=.5\").to(revealsRefs[next], 0.1, {\n          x: -(rect2.right - rect.right) * iterator,\n          delay: 0.5\n        }, \"-=.5\").to(revealsRefs[current], 0.1, {\n          y: -(rect2.bottom - rect2.top + revealsRefs[next]),\n          delay: 0.5,\n          backgroundColor: \"cadetblue\"\n        }).to(revealsRefs[next], 0.1, {\n          y: -(rect.bottom - rect.top + revealsRefs[current]),\n          delay: 0.5,\n          backgroundColor: \"cadetblue\"\n        });\n        return tl2;\n      } else {\n        const rect = revealsRefs[current].getBoundingClientRect();\n        const rect2 = revealsRefs[next].getBoundingClientRect();\n        let tl2 = gsap.timeline({\n          autoRemoveChildren: true\n        });\n        tl2.to(revealsRefs[current], {\n          backgroundColor: \"blue\"\n        }).to(revealsRefs[next], .5, {\n          backgroundColor: \"blue\"\n        }).to(revealsRefs[current], 0.1, {\n          backgroundColor: \"blue\",\n          y: 400,\n          delay: 0.5\n        }).to(revealsRefs[next], 0.1, {\n          backgroundColor: \"blue\",\n          y: 400,\n          delay: 0.5\n        }).to(revealsRefs[current], 0.1, {\n          x: (rect2.right - rect.right) * iterator,\n          delay: 0.5\n        }, \"-=.5\").to(revealsRefs[next], 0.1, {\n          x: -(rect2.right - rect.right),\n          delay: 0.5\n        }, \"-=.5\").to(revealsRefs[current], 0.1, {\n          y: -(rect2.bottom - rect2.top + revealsRefs[next]),\n          delay: 0.5,\n          backgroundColor: \"cadetblue\"\n        }).to(revealsRefs[next], 0.1, {\n          y: -(rect.bottom - rect.top + revealsRefs[current]),\n          delay: 0.5,\n          backgroundColor: \"cadetblue\"\n        });\n        return tl2;\n      }\n\n      myObj[current] = false;\n      myObj[next] = false;\n    } else {\n      console.log(\"hitting\");\n      myObj[current] = true;\n      myObj[next] = true;\n      const rect = revealsRefs[current].getBoundingClientRect();\n      const rect2 = revealsRefs[next].getBoundingClientRect();\n      let tl2 = gsap.timeline({\n        autoRemoveChildren: true\n      });\n      tl2.to(revealsRefs[current], {\n        backgroundColor: \"blue\"\n      }).to(revealsRefs[next], .5, {\n        backgroundColor: \"blue\"\n      }).to(revealsRefs[current], 0.1, {\n        backgroundColor: \"blue\",\n        y: 400,\n        delay: 0.5\n      }).to(revealsRefs[next], 0.1, {\n        backgroundColor: \"blue\",\n        y: 400,\n        delay: 0.5\n      }).to(revealsRefs[current], 0.1, {\n        x: (rect2.right - rect.right) * iterator,\n        delay: 0.5\n      }, \"-=.5\").to(revealsRefs[next], 0.1, {\n        x: -(rect2.right - rect.right),\n        delay: 0.5\n      }, \"-=.5\").to(revealsRefs[current], 0.1, {\n        y: -(rect2.bottom - rect2.top + revealsRefs[next]),\n        delay: 0.5,\n        backgroundColor: \"cadetblue\"\n      }).to(revealsRefs[next], 0.1, {\n        y: -(rect.bottom - rect.top + revealsRefs[current]),\n        delay: 0.5,\n        backgroundColor: \"cadetblue\"\n      });\n      return tl2;\n    }\n  };\n\n  const initialize = () => {\n    bubbleSort();\n  };\n\n  const addToRefs = el => {\n    if (el && !newArrayState.includes(el)) {\n      newArrayState.push(el);\n    }\n  };\n\n  const addToRefsMobile = el => {\n    if (el && !revealsRefMobile.current.includes(el)) {\n      revealsRefMobile.current.push(el);\n    }\n  }; // const onAnimate1 = () => {\n  //         const rect = revealsRefs.current[0].getBoundingClientRect();\n  //         console.log(rect.top, rect.right, rect.bottom, rect.left)\n  //         const rect2 = revealsRefs.current[10].getBoundingClientRect();\n  //         console.log(rect2.top, rect2.right, rect2.bottom, rect2.left)\n  //         let tl = gsap.timeline(); \n  //         let another = gsap.timeline();\n  //         tl.to(revealsRefs.current[0], {backgroundColor:\"blue\"})\n  //         .to(revealsRefs.current[10], 1, {backgroundColor:\"blue\"})\n  //         .to(revealsRefs.current[0], 0.9, {backgroundColor:\"blue\",y: 400,delay: 0.5})\n  //         .to(revealsRefs.current[10], 0.9, {backgroundColor:\"blue\",y: 400,delay: 0.5})\n  //         .to(revealsRefs.current[0], 0.9, {x:  (rect2.right-rect.right),delay: 0.5},\"-=.5\")\n  //         .to(revealsRefs.current[10], 0.9, {x: -(rect2.right-rect.right) ,delay: 0.5},\"-=.5\")\n  //         .to(revealsRefs.current[0], 0.9, {y: -(rect2.bottom-rect2.top+ revealsRefs.current[10]),delay: 0.5,backgroundColor:\"cadetblue\"})\n  //         .to(revealsRefs.current[10], 0.9, {y: -(rect.bottom-rect.top +revealsRefs.current[0]),delay: 0.5,backgroundColor:\"cadetblue\"});\n  // }\n  // const onAnimate2 = () => {\n  //     const rect = revealsRefMobile.current[0].getBoundingClientRect();\n  //     console.log(rect.top, rect.right, rect.bottom, rect.left)\n  //     const rect2 = revealsRefMobile.current[10].getBoundingClientRect();\n  //     console.log(rect2.top, rect2.right, rect2.bottom, rect2.left)\n  //     let tl = gsap.timeline(); \n  //     tl.to(revealsRefs[0], {backgroundColor:\"blue\"})\n  //     .to(revealsRefs[10], 1, {backgroundColor:\"blue\"})\n  //     .to(revealsRefMobile.current[0], 0.9, {x: 200,delay: 0.5,backgroundColor:\"blue\"})\n  //     .to(revealsRefMobile.current[10], 0.9, {x: 200,delay: 0.5,backgroundColor:\"blue\"})\n  //     .to(revealsRefMobile.current[0],  0.9,{y:  (rect2.bottom-rect.bottom),delay: 0.5},\"-=.5\")\n  //     .to(revealsRefMobile.current[10],  0.9,{y: -(rect2.bottom-rect.bottom) ,delay: 0.5},\"-=.5\")\n  //     .to(revealsRefMobile.current[0], 0.9, {x: -(rect2.bottom-rect2.top+ revealsRefMobile.current[10]),delay: 0.5,backgroundColor:\"cadetblue\"})\n  //     .to(revealsRefMobile.current[10], 0.9, {x: -(rect.bottom-rect.top +revealsRefs[0]),delay: 0.5,backgroundColor:\"cadetblue\"});\n  // }\n  // const onAnimateFloopfy = () => {\n  //   let tl = gsap.timeline(); \n  //   for(let i = 0 ;i<revealsRefs.length;i++)\n  //   {\n  //       tl.to(revealsRefs[i], 0.1, {y: 100,duration:2})\n  //       .to(revealsRefs[i], 0.1, {y: -10,duration:2});\n  //   }\n  //   for(let i = 0 ;i<revealsRefs.length;i++)\n  //   {\n  //       tl.to(revealsRefs[i], 0.01, {y: 100,duration:2})\n  //       .to(revealsRefs[i], 0.01, {y: -10,duration:2});\n  //   }\n  // }\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"insertion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 5\n    }\n  }, \"Insertion Sort\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: initialize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 5\n    }\n  }, \"Run1\"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 1\n    }\n  }, \"Run2\"), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"blocksNumberWeb\",\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      width: \"1200px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 2\n    }\n  }, values.map((num, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"blocksNumber\",\n      key: num,\n      ref: addToRefs,\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"100%\",\n        alignItems: \"center\",\n        height: \"100vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        margin: \"1px\",\n        padding: \"1px\",\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 10\n      }\n    }, num)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"block\",\n      style: {\n        height: `${num * 10}px`,\n        backgroundColor: \"ivory\",\n        margin: \"5px\",\n        width: \"80%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 10\n      }\n    }));\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"blocksNumberMobile\",\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      width: \"100vw\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 2\n    }\n  }, values.map((num, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"blocksNumber\",\n      key: num,\n      ref: addToRefsMobile,\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        width: \"100%\",\n        alignItems: \"center\",\n        margin: \"0\",\n        padding: \"0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        margin: \"2px\",\n        padding: \"2px\",\n        fontSize: \"11px\",\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 10\n      }\n    }, num)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"block\",\n      style: {\n        width: `${num * 6}px`,\n        backgroundColor: \"ivory\",\n        marginLeft: \"5px\",\n        padding: \"0\",\n        height: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 10\n      }\n    }));\n  })));\n}\n\nexport default Bubble;","map":{"version":3,"sources":["C:/Users/Roger/Code/Projects/sortingRepo/sorting/src/components/Bubble.js"],"names":["React","useEffect","useRef","useState","gsap","randomListOfNums","n","nums","i","randomNum","Math","floor","random","push","Bubble","myVals","values","setValues","mobileValues","setMobileValues","revealsRef","newArrayState","current","revealsRefs","setRevealsRefs","trigger","setTrigger","console","log","revealsRefMobile","bubbleSort","iterator","swapped","length","num1","Number","innerText","num2","iterationanimation","temp2","iterationanimationNoSwap","next","rect","getBoundingClientRect","top","right","bottom","left","rect2","tl","timeline","autoRemoveChildren","to","backgroundColor","y","delay","myObj","tl2","x","initialize","addToRefs","el","includes","addToRefsMobile","display","flexDirection","width","map","num","index","alignItems","height","margin","padding","color","justifyContent","fontSize","marginLeft"],"mappings":"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","sourcesContent":["import React,{useEffect,useRef,useState}  from 'react';\r\nimport {gsap} from 'gsap';\r\nimport '../App.css';\r\n\r\n\r\nconst randomListOfNums =(n)=>\r\n{\r\n    const nums = [];\r\n\r\n    for( let i =0; i<n; i++)\r\n    {\r\n        let randomNum = Math.floor(Math.random() * 25) + 1;\r\n\r\n        nums.push(randomNum);\r\n\r\n    }\r\n\r\n    return nums;   \r\n\r\n}\r\n\r\nfunction Bubble() {\r\n\r\n\r\n  const myVals = randomListOfNums(5)\r\n\r\n    const [values, setValues] = useState(myVals)\r\n\r\n    const [mobileValues, setMobileValues] = useState(randomListOfNums(5))\r\n\r\n    const revealsRef = React.useRef([]);\r\n\r\n    let newArrayState =  revealsRef.current = []\r\n\r\n    const [revealsRefs,setRevealsRefs] = useState(newArrayState);\r\n\r\n\r\n    const[trigger,setTrigger] = useState(false);\r\n\r\n     console.log(values,\"values\")\r\n\r\n\r\n    // revealsRefs = [];\r\n\r\n\r\n\r\n    const revealsRefMobile= React.useRef([]);\r\n    revealsRefMobile.current = [];\r\n\r\n\r\n\r\n\r\n\r\n    const useEffect=(()=>\r\n    {\r\n\r\n\r\n    },[]);\r\n\r\n\r\n\r\n      \r\nconst  bubbleSort = async () =>\r\n{\r\n\r\n\r\n// const masterTimeLine = gsap.timeline()\r\n\r\nlet iterator= 1;\r\nvar swapped = true;\r\n\r\n  \twhile (swapped){\r\n\r\n    swapped = false;\r\n\r\n\r\n\t\tfor(var i=0 ; i<revealsRefs.length-1; i++){\r\n\r\n      let num1 = Number(revealsRefs[i].innerText);\r\n\r\n      let num2 = Number(revealsRefs[i+1].innerText);\r\n\r\n\r\n\t\t\tif( num1 > num2){\r\n\r\n        await iterationanimation(i,i+1,iterator);\r\n\r\n        var temp2 = revealsRefs[i];\r\n\r\n        revealsRefs[i] = revealsRefs[i+1]\r\n\r\n        revealsRefs[i+1] = temp2\r\n\r\n        swapped = true;\r\n\r\n        iterator++;\r\n\r\n      }else\r\n      {\r\n         await iterationanimationNoSwap(i,i+1);\r\n         iterator = 1;\r\n      }\r\n \r\n      \r\n\r\n    }\r\n\r\n    setTrigger(true)\r\n\r\n  }\r\n\r\n  // onAnimateFloopfy();\r\n\r\n\r\n}\r\n\r\n\r\nconst iterationanimationNoSwap= (current,next)=>{\r\n\r\n\r\n\r\n        const rect = newArrayState[current].getBoundingClientRect();\r\n        console.log(rect.top, rect.right, rect.bottom, rect.left)\r\n\r\n        const rect2 = newArrayState[next].getBoundingClientRect();\r\n        console.log(rect2.top, rect2.right, rect2.bottom, rect2.left)\r\n\r\n        let tl = gsap.timeline({autoRemoveChildren: true}); \r\n\r\n         tl.to(newArrayState[current], {backgroundColor:\"blue\"})\r\n        .to(newArrayState[next], .5, {backgroundColor:\"blue\"})\r\n        \r\n        .to(newArrayState[current], 0.1, {backgroundColor:\"blue\",y: 400,delay: 0.5})\r\n        .to(newArrayState[next], 0.1, {backgroundColor:\"blue\",y: 400,delay: 0.5})\r\n\r\n        .to(newArrayState[current], 0.1, {y: -(rect2.bottom-rect2.top+ newArrayState[next]),delay: 0.5,backgroundColor:\"cadetblue\"})\r\n        .to(newArrayState[next], 0.1, {y: -(rect.bottom-rect.top +newArrayState[current]),delay: 0.5,backgroundColor:\"cadetblue\"})\r\n\r\n        return tl;\r\n\r\n\r\n        \r\n}\r\n\r\nlet myObj = {}\r\n\r\n\r\nconst iterationanimation = (current,next,iterator)=>{\r\n\r\n  console.log(myObj,\"myObj\")\r\n\r\n    if( myObj[current] || myObj[next])\r\n    {\r\n      console.log(\"hittingartatertert\")\r\n\r\n      if(myObj[next] === true)\r\n      {\r\n        const rect = revealsRefs[current].getBoundingClientRect();\r\n        const rect2 = revealsRefs[next].getBoundingClientRect();\r\n  \r\n        let tl2 = gsap.timeline({autoRemoveChildren: true}); \r\n  \r\n        tl2.to(revealsRefs[current], {backgroundColor:\"blue\"})\r\n        .to(revealsRefs[next], .5, {backgroundColor:\"blue\"})\r\n        \r\n        .to(revealsRefs[current], 0.1, {backgroundColor:\"blue\",y: 400,delay: 0.5})\r\n        .to(revealsRefs[next], 0.1, {backgroundColor:\"blue\",y: 400,delay: 0.5})\r\n  \r\n        .to(revealsRefs[current], 0.1, {x:  (rect2.right-rect.right)*iterator,delay: 0.5},\"-=.5\")\r\n        .to(revealsRefs[next], 0.1, {x: -(rect2.right-rect.right),delay: 0.5},\"-=.5\")\r\n        \r\n        .to(revealsRefs[current], 0.1, {y: -(rect2.bottom-rect2.top+ revealsRefs[next]),delay: 0.5,backgroundColor:\"cadetblue\"})\r\n        .to(revealsRefs[next], 0.1, {y: -(rect.bottom-rect.top +revealsRefs[current]),delay: 0.5,backgroundColor:\"cadetblue\"})\r\n  \r\n        return tl2;\r\n  \r\n      \r\n      \r\n      }\r\n      \r\n      else if(myObj[current] === true)\r\n      {\r\n        const rect = revealsRefs[current].getBoundingClientRect();\r\n        const rect2 = revealsRefs[next].getBoundingClientRect();\r\n  \r\n        let tl2 = gsap.timeline({autoRemoveChildren: true}); \r\n  \r\n        tl2.to(revealsRefs[current], {backgroundColor:\"blue\"})\r\n        .to(revealsRefs[next], .5, {backgroundColor:\"blue\"})\r\n        \r\n        .to(revealsRefs[current], 0.1, {backgroundColor:\"blue\",y: 400,delay: 0.5})\r\n        .to(revealsRefs[next], 0.1, {backgroundColor:\"blue\",y: 400,delay: 0.5})\r\n  \r\n        .to(revealsRefs[current], 0.1, {x:  (rect2.right-rect.right),delay: 0.5},\"-=.5\")\r\n        .to(revealsRefs[next], 0.1, {x: -(rect2.right-rect.right)*iterator,delay: 0.5},\"-=.5\")\r\n        \r\n        .to(revealsRefs[current], 0.1, {y: -(rect2.bottom-rect2.top+ revealsRefs[next]),delay: 0.5,backgroundColor:\"cadetblue\"})\r\n        .to(revealsRefs[next], 0.1, {y: -(rect.bottom-rect.top +revealsRefs[current]),delay: 0.5,backgroundColor:\"cadetblue\"})\r\n  \r\n  \r\n        return tl2;\r\n  \r\n\r\n      }\r\n      \r\n      else{\r\n        const rect = revealsRefs[current].getBoundingClientRect();\r\n        const rect2 = revealsRefs[next].getBoundingClientRect();\r\n  \r\n        let tl2 = gsap.timeline({autoRemoveChildren: true}); \r\n  \r\n        tl2.to(revealsRefs[current], {backgroundColor:\"blue\"})\r\n        .to(revealsRefs[next], .5, {backgroundColor:\"blue\"})\r\n        \r\n        .to(revealsRefs[current], 0.1, {backgroundColor:\"blue\",y: 400,delay: 0.5})\r\n        .to(revealsRefs[next], 0.1, {backgroundColor:\"blue\",y: 400,delay: 0.5})\r\n  \r\n        .to(revealsRefs[current], 0.1, {x:  (rect2.right-rect.right)*iterator,delay: 0.5},\"-=.5\")\r\n        .to(revealsRefs[next], 0.1, {x: -(rect2.right-rect.right),delay: 0.5},\"-=.5\")\r\n        \r\n        .to(revealsRefs[current], 0.1, {y: -(rect2.bottom-rect2.top+ revealsRefs[next]),delay: 0.5,backgroundColor:\"cadetblue\"})\r\n        .to(revealsRefs[next], 0.1, {y: -(rect.bottom-rect.top +revealsRefs[current]),delay: 0.5,backgroundColor:\"cadetblue\"})\r\n  \r\n  \r\n        return tl2;\r\n  \r\n\r\n      }\r\n\r\n\r\n      myObj[current] = false\r\n      myObj[next] = false\r\n      \r\n\r\n    }else\r\n    {\r\n\r\n      console.log(\"hitting\")\r\n    myObj[current] = true\r\n    myObj[next] = true\r\n\r\n\r\n\r\n    const rect = revealsRefs[current].getBoundingClientRect();\r\n      const rect2 = revealsRefs[next].getBoundingClientRect();\r\n\r\n      let tl2 = gsap.timeline({autoRemoveChildren: true}); \r\n\r\n      tl2.to(revealsRefs[current], {backgroundColor:\"blue\"})\r\n      .to(revealsRefs[next], .5, {backgroundColor:\"blue\"})\r\n      \r\n      .to(revealsRefs[current], 0.1, {backgroundColor:\"blue\",y: 400,delay: 0.5})\r\n      .to(revealsRefs[next], 0.1, {backgroundColor:\"blue\",y: 400,delay: 0.5})\r\n\r\n      .to(revealsRefs[current], 0.1, {x:  (rect2.right-rect.right)*iterator,delay: 0.5},\"-=.5\")\r\n      .to(revealsRefs[next], 0.1, {x: -(rect2.right-rect.right),delay: 0.5},\"-=.5\")\r\n      \r\n      .to(revealsRefs[current], 0.1, {y: -(rect2.bottom-rect2.top+ revealsRefs[next]),delay: 0.5,backgroundColor:\"cadetblue\"})\r\n      .to(revealsRefs[next], 0.1, {y: -(rect.bottom-rect.top +revealsRefs[current]),delay: 0.5,backgroundColor:\"cadetblue\"})\r\n\r\n\r\n\r\n      return tl2;\r\n\r\n\r\n\r\n    }\r\n\r\n      \r\n\r\n}\r\n\r\n\r\n\r\nconst initialize  = ()=>{\r\n\r\nbubbleSort();\r\n\r\n}\r\n\r\n\r\nconst addToRefs = (el) =>\r\n{\r\n\r\n    if(el && !newArrayState.includes(el))\r\n    {\r\n      newArrayState.push(el);\r\n    }\r\n\r\n}\r\n\r\nconst addToRefsMobile = (el) =>\r\n{\r\n\r\n    if(el && !revealsRefMobile.current.includes(el))\r\n    {\r\n        revealsRefMobile.current.push(el);\r\n    }\r\n}\r\n\r\n\r\n// const onAnimate1 = () => {\r\n\r\n\r\n//         const rect = revealsRefs.current[0].getBoundingClientRect();\r\n//         console.log(rect.top, rect.right, rect.bottom, rect.left)\r\n\r\n//         const rect2 = revealsRefs.current[10].getBoundingClientRect();\r\n//         console.log(rect2.top, rect2.right, rect2.bottom, rect2.left)\r\n\r\n//         let tl = gsap.timeline(); \r\n\r\n//         let another = gsap.timeline();\r\n\r\n//         tl.to(revealsRefs.current[0], {backgroundColor:\"blue\"})\r\n//         .to(revealsRefs.current[10], 1, {backgroundColor:\"blue\"})\r\n        \r\n//         .to(revealsRefs.current[0], 0.9, {backgroundColor:\"blue\",y: 400,delay: 0.5})\r\n//         .to(revealsRefs.current[10], 0.9, {backgroundColor:\"blue\",y: 400,delay: 0.5})\r\n    \r\n//         .to(revealsRefs.current[0], 0.9, {x:  (rect2.right-rect.right),delay: 0.5},\"-=.5\")\r\n//         .to(revealsRefs.current[10], 0.9, {x: -(rect2.right-rect.right) ,delay: 0.5},\"-=.5\")\r\n        \r\n//         .to(revealsRefs.current[0], 0.9, {y: -(rect2.bottom-rect2.top+ revealsRefs.current[10]),delay: 0.5,backgroundColor:\"cadetblue\"})\r\n//         .to(revealsRefs.current[10], 0.9, {y: -(rect.bottom-rect.top +revealsRefs.current[0]),delay: 0.5,backgroundColor:\"cadetblue\"});\r\n    \r\n        \r\n\r\n\r\n\r\n// }\r\n\r\n\r\n\r\n// const onAnimate2 = () => {\r\n\r\n\r\n\r\n//     const rect = revealsRefMobile.current[0].getBoundingClientRect();\r\n//     console.log(rect.top, rect.right, rect.bottom, rect.left)\r\n\r\n//     const rect2 = revealsRefMobile.current[10].getBoundingClientRect();\r\n//     console.log(rect2.top, rect2.right, rect2.bottom, rect2.left)\r\n\r\n\r\n//     let tl = gsap.timeline(); \r\n\r\n\r\n//     tl.to(revealsRefs[0], {backgroundColor:\"blue\"})\r\n//     .to(revealsRefs[10], 1, {backgroundColor:\"blue\"})\r\n    \r\n    \r\n//     .to(revealsRefMobile.current[0], 0.9, {x: 200,delay: 0.5,backgroundColor:\"blue\"})\r\n//     .to(revealsRefMobile.current[10], 0.9, {x: 200,delay: 0.5,backgroundColor:\"blue\"})\r\n\r\n//     .to(revealsRefMobile.current[0],  0.9,{y:  (rect2.bottom-rect.bottom),delay: 0.5},\"-=.5\")\r\n//     .to(revealsRefMobile.current[10],  0.9,{y: -(rect2.bottom-rect.bottom) ,delay: 0.5},\"-=.5\")\r\n    \r\n//     .to(revealsRefMobile.current[0], 0.9, {x: -(rect2.bottom-rect2.top+ revealsRefMobile.current[10]),delay: 0.5,backgroundColor:\"cadetblue\"})\r\n//     .to(revealsRefMobile.current[10], 0.9, {x: -(rect.bottom-rect.top +revealsRefs[0]),delay: 0.5,backgroundColor:\"cadetblue\"});\r\n\r\n\r\n\r\n\r\n\r\n// }\r\n\r\n\r\n\r\n// const onAnimateFloopfy = () => {\r\n\r\n\r\n//   let tl = gsap.timeline(); \r\n\r\n\r\n//   for(let i = 0 ;i<revealsRefs.length;i++)\r\n//   {\r\n      \r\n//       tl.to(revealsRefs[i], 0.1, {y: 100,duration:2})\r\n//       .to(revealsRefs[i], 0.1, {y: -10,duration:2});\r\n//   }\r\n\r\n  \r\n//   for(let i = 0 ;i<revealsRefs.length;i++)\r\n//   {\r\n      \r\n//       tl.to(revealsRefs[i], 0.01, {y: 100,duration:2})\r\n//       .to(revealsRefs[i], 0.01, {y: -10,duration:2});\r\n\r\n//   }\r\n\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"insertion\" >\r\n\r\n    <p >Insertion Sort</p>\r\n\r\n    <button onClick={initialize}>Run1</button>\r\n\r\n<button >Run2</button>\r\n\r\n <section className=\"blocksNumberWeb\" style={{display:\"flex\", flexDirection:\"row\",width:\"1200px\"}}>\r\n\r\n  {values.map((num,index)=>{\r\n\r\n     return (\r\n         <div className=\"blocksNumber\"  key={num} ref={addToRefs}  style={{display:\"flex\", flexDirection:\"column\",width:\"100%\",alignItems:\"center\",height:\"100vh\"}}>\r\n\r\n         \r\n         <div>\r\n\r\n         <p style={{margin:\"1px\",padding:\"1px\",color:\"white\"}} >{num}</p>\r\n\r\n         </div>\r\n\r\n         <div \r\n        \r\n         className=\"block\"\r\n         style={{height:`${num*10}px`, backgroundColor:\"ivory\",margin:\"5px\",width:\"80%\"}}\r\n     \r\n  \r\n         >\r\n\r\n         </div>\r\n         </div>\r\n     )\r\n\r\n  })}\r\n\r\n </section>\r\n\r\n <section className=\"blocksNumberMobile\" style={{display:\"flex\", flexDirection:\"column\",width:\"100vw\",justifyContent:\"center\",alignItems:\"center\" }}>\r\n\r\n     {values.map((num,index)=>{\r\n\r\n     return (\r\n         <div className=\"blocksNumber\"   key={num} ref={addToRefsMobile} style={{display:\"flex\", flexDirection:\"row\",width:\"100%\", alignItems:\"center\",margin:\"0\",padding:\"0\"}}>\r\n\r\n         <div >\r\n\r\n         <p style={{margin:\"2px\",padding:\"2px\",fontSize:\"11px\",color:\"white\"}} >{num}</p>\r\n\r\n         </div>\r\n\r\n         <div \r\n\r\n         className=\"block\"\r\n         style={{width:`${num*6}px`, backgroundColor:\"ivory\",marginLeft:\"5px\",padding:\"0\",height:\"10px\"}}\r\n         \r\n         >\r\n             \r\n         </div>\r\n         </div>\r\n     )\r\n\r\n     })}\r\n\r\n</section>\r\n\r\n</div>\r\n  );\r\n}\r\n\r\nexport default Bubble;\r\n"]},"metadata":{},"sourceType":"module"}