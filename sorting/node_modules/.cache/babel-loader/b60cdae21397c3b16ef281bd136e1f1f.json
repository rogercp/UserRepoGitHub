{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Roger\\\\Code\\\\Projects\\\\sortingRepo\\\\sorting\\\\src\\\\components\\\\Bubble.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport { gsap } from 'gsap';\nimport '../App.css';\n\nconst randomListOfNums = n => {\n  const nums = [];\n\n  for (let i = 0; i < n; i++) {\n    let randomNum = Math.floor(Math.random() * 25) + 1;\n    nums.push(randomNum);\n  }\n\n  return nums;\n};\n\nfunction Bubble() {\n  const [values, setValues] = useState(randomListOfNums(20));\n  const [mobileValues, setMobileValues] = useState(randomListOfNums(20));\n  const revealsRef = React.useRef([]);\n  revealsRef.current = [];\n  const revealsRefMobile = React.useRef([]);\n  revealsRefMobile.current = [];\n  const useEffect = (() => {}, []);\n\n  const bubbleSort = arr => {\n    let masterTimeLine = gsap.timeline();\n    var swapped = true;\n\n    while (swapped) {\n      swapped = false;\n\n      for (var i = 0; i < arr.length - 1; i++) {\n        masterTimeLine.add(iterationanimation(i)).then(() => iterationanimationEnd(i)); // if(arr[i]>arr[i+1]){\n        // \tvar temp = arr[i];\n        // \tarr[i] = arr[i+1];\n        // \tarr[i+1] = temp;\n        //   swapped = true;\n        // }\n      }\n    }\n  };\n\n  const iterationanimation = current => {\n    console.log(\"hitting red\"); // const rect= revealsRef.current[current].getBoundingClientRect();\n\n    return gsap.timeline().to(revealsRef.current[current], 2, {\n      backgroundColor: \"red\",\n      duration: 2\n    });\n  };\n\n  const iterationanimationEnd = current => {\n    console.log(\"hitting blue\"); // const rect= revealsRef.current[current].getBoundingClientRect();\n\n    return gsap.timeline().to(revealsRef.current[current], {\n      backgroundColor: \"cadetblue\"\n    });\n  };\n\n  const initialize = () => {\n    bubbleSort(values);\n  };\n\n  const addToRefs = el => {\n    if (el && !revealsRef.current.includes(el)) {\n      revealsRef.current.push(el);\n    }\n  };\n\n  const addToRefsMobile = el => {\n    if (el && !revealsRefMobile.current.includes(el)) {\n      revealsRefMobile.current.push(el);\n    }\n  };\n\n  const onAnimate1 = () => {\n    const rect = revealsRef.current[0].getBoundingClientRect();\n    console.log(rect.top, rect.right, rect.bottom, rect.left);\n    const rect2 = revealsRef.current[10].getBoundingClientRect();\n    console.log(rect2.top, rect2.right, rect2.bottom, rect2.left);\n    let tl = gsap.timeline();\n    let another = gsap.timeline();\n    tl.to(revealsRef.current[0], {\n      backgroundColor: \"blue\"\n    }).to(revealsRef.current[10], 1, {\n      backgroundColor: \"blue\"\n    }).to(revealsRef.current[0], 0.9, {\n      backgroundColor: \"blue\",\n      y: 400,\n      delay: 0.5\n    }).to(revealsRef.current[10], 0.9, {\n      backgroundColor: \"blue\",\n      y: 400,\n      delay: 0.5\n    }).to(revealsRef.current[0], 0.9, {\n      x: rect2.right - rect.right,\n      delay: 0.5\n    }, \"-=.5\").to(revealsRef.current[10], 0.9, {\n      x: -(rect2.right - rect.right),\n      delay: 0.5\n    }, \"-=.5\").to(revealsRef.current[0], 0.9, {\n      y: -(rect2.bottom - rect2.top + revealsRef.current[10]),\n      delay: 0.5,\n      backgroundColor: \"cadetblue\"\n    }).to(revealsRef.current[10], 0.9, {\n      y: -(rect.bottom - rect.top + revealsRef.current[0]),\n      delay: 0.5,\n      backgroundColor: \"cadetblue\"\n    });\n  };\n\n  const onAnimate2 = () => {\n    const rect = revealsRefMobile.current[0].getBoundingClientRect();\n    console.log(rect.top, rect.right, rect.bottom, rect.left);\n    const rect2 = revealsRefMobile.current[10].getBoundingClientRect();\n    console.log(rect2.top, rect2.right, rect2.bottom, rect2.left);\n    let tl = gsap.timeline();\n    tl.to(revealsRef.current[0], {\n      backgroundColor: \"blue\"\n    }).to(revealsRef.current[10], 1, {\n      backgroundColor: \"blue\"\n    }).to(revealsRefMobile.current[0], 0.9, {\n      x: 200,\n      delay: 0.5,\n      backgroundColor: \"blue\"\n    }).to(revealsRefMobile.current[10], 0.9, {\n      x: 200,\n      delay: 0.5,\n      backgroundColor: \"blue\"\n    }).to(revealsRefMobile.current[0], 0.9, {\n      y: rect2.bottom - rect.bottom,\n      delay: 0.5\n    }, \"-=.5\").to(revealsRefMobile.current[10], 0.9, {\n      y: -(rect2.bottom - rect.bottom),\n      delay: 0.5\n    }, \"-=.5\").to(revealsRefMobile.current[0], 0.9, {\n      x: -(rect2.bottom - rect2.top + revealsRefMobile.current[10]),\n      delay: 0.5,\n      backgroundColor: \"cadetblue\"\n    }).to(revealsRefMobile.current[10], 0.9, {\n      x: -(rect.bottom - rect.top + revealsRef.current[0]),\n      delay: 0.5,\n      backgroundColor: \"cadetblue\"\n    });\n  };\n\n  const onAnimateFloopfy = () => {\n    let tl = gsap.timeline();\n\n    for (let i = 0; i < revealsRef.current.length; i++) {\n      tl.to(revealsRef.current[i], 0.1, {\n        y: 100,\n        duration: 2\n      }).to(revealsRef.current[i], 0.1, {\n        y: -10,\n        duration: 2\n      });\n    }\n\n    for (let i = 0; i < revealsRef.current.length; i++) {\n      tl.to(revealsRef.current[i], 0.01, {\n        y: 100,\n        duration: 2\n      }).to(revealsRef.current[i], 0.01, {\n        y: -10,\n        duration: 2\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"insertion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 5\n    }\n  }, \"Insertion Sort\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: initialize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 5\n    }\n  }, \"Run1\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onAnimate2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 1\n    }\n  }, \"Run2\"), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"blocksNumberWeb\",\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      width: \"1200px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 2\n    }\n  }, values.map((num, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"blocksNumber\",\n      key: num,\n      ref: addToRefs,\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"100%\",\n        alignItems: \"center\",\n        height: \"100vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        margin: \"1px\",\n        padding: \"1px\",\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 10\n      }\n    }, num)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"block\",\n      style: {\n        height: `${num * 10}px`,\n        backgroundColor: \"ivory\",\n        margin: \"5px\",\n        width: \"80%\"\n      },\n      onClick: onAnimateFloopfy,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 10\n      }\n    }));\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"blocksNumberMobile\",\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      width: \"100vw\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 2\n    }\n  }, values.map((num, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"blocksNumber\",\n      key: num,\n      ref: addToRefsMobile,\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        width: \"100%\",\n        alignItems: \"center\",\n        margin: \"0\",\n        padding: \"0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        margin: \"2px\",\n        padding: \"2px\",\n        fontSize: \"11px\",\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 10\n      }\n    }, num)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"block\",\n      style: {\n        width: `${num * 6}px`,\n        backgroundColor: \"ivory\",\n        marginLeft: \"5px\",\n        padding: \"0\",\n        height: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 10\n      }\n    }));\n  })));\n}\n\nexport default Bubble;","map":{"version":3,"sources":["C:/Users/Roger/Code/Projects/sortingRepo/sorting/src/components/Bubble.js"],"names":["React","useEffect","useRef","useState","gsap","randomListOfNums","n","nums","i","randomNum","Math","floor","random","push","Bubble","values","setValues","mobileValues","setMobileValues","revealsRef","current","revealsRefMobile","bubbleSort","arr","masterTimeLine","timeline","swapped","length","add","iterationanimation","then","iterationanimationEnd","console","log","to","backgroundColor","duration","initialize","addToRefs","el","includes","addToRefsMobile","onAnimate1","rect","getBoundingClientRect","top","right","bottom","left","rect2","tl","another","y","delay","x","onAnimate2","onAnimateFloopfy","display","flexDirection","width","map","num","index","alignItems","height","margin","padding","color","justifyContent","fontSize","marginLeft"],"mappings":"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","sourcesContent":["import React,{useEffect,useRef,useState}  from 'react';\r\nimport {gsap} from 'gsap';\r\nimport '../App.css';\r\n\r\n\r\nconst randomListOfNums =(n)=>\r\n{\r\n    const nums = [];\r\n\r\n    for( let i =0; i<n; i++)\r\n    {\r\n        let randomNum = Math.floor(Math.random() * 25) + 1;\r\n\r\n        nums.push(randomNum);\r\n\r\n    }\r\n\r\n    return nums;   \r\n\r\n}\r\n\r\nfunction Bubble() {\r\n\r\n  const [values, setValues] = useState(randomListOfNums(20))\r\n    const [mobileValues, setMobileValues] = useState(randomListOfNums(20))\r\n\r\n\r\n    const revealsRef = React.useRef([]);\r\n    revealsRef.current = [];\r\n\r\n    const revealsRefMobile= React.useRef([]);\r\n    revealsRefMobile.current = [];\r\n\r\n\r\n\r\n    const useEffect=(()=>\r\n    {\r\n\r\n    \r\n\r\n\r\n    },[]);\r\n\r\n\r\n\r\n\r\n\r\n  \r\n      \r\nconst  bubbleSort = (arr) =>\r\n{\r\n\r\nlet masterTimeLine = gsap.timeline()\r\n\r\n  var swapped = true;\r\n\r\n\twhile (swapped){\r\n\r\n    swapped = false;\r\n    \r\n\t\tfor(var i=0 ; i<arr.length-1; i++){\r\n\r\n     \r\n      masterTimeLine.add(iterationanimation(i)).then(() => iterationanimationEnd(i) )\r\n\r\n\r\n\t\t\t// if(arr[i]>arr[i+1]){\r\n\r\n\t\t\t// \tvar temp = arr[i];\r\n\t\t\t// \tarr[i] = arr[i+1];\r\n\t\t\t// \tarr[i+1] = temp;\r\n      //   swapped = true;\r\n        \r\n      // }\r\n      \r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n}\r\n\r\n\r\nconst iterationanimation=(current)=>{\r\n\r\n  console.log(\"hitting red\" );\r\n\r\n  // const rect= revealsRef.current[current].getBoundingClientRect();\r\n\r\n  return gsap.timeline().to(revealsRef.current[current],2,{backgroundColor:\"red\", duration:2})\r\n\r\n}\r\n\r\nconst iterationanimationEnd=(current)=>{\r\n\r\n  console.log(\"hitting blue\" );\r\n\r\n  // const rect= revealsRef.current[current].getBoundingClientRect();\r\n\r\n  return gsap.timeline().to(revealsRef.current[current],{backgroundColor:\"cadetblue\"})\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst initialize  = ()=>{\r\n\r\nbubbleSort(values);\r\n\r\n\r\n}\r\n\r\n\r\n\r\nconst addToRefs = (el) =>\r\n{\r\n\r\n    if(el && !revealsRef.current.includes(el))\r\n    {\r\n        revealsRef.current.push(el);\r\n    }\r\n\r\n}\r\n\r\nconst addToRefsMobile = (el) =>\r\n{\r\n\r\n    if(el && !revealsRefMobile.current.includes(el))\r\n    {\r\n        revealsRefMobile.current.push(el);\r\n    }\r\n}\r\n\r\n\r\nconst onAnimate1 = () => {\r\n\r\n\r\n        const rect = revealsRef.current[0].getBoundingClientRect();\r\n        console.log(rect.top, rect.right, rect.bottom, rect.left)\r\n\r\n        const rect2 = revealsRef.current[10].getBoundingClientRect();\r\n        console.log(rect2.top, rect2.right, rect2.bottom, rect2.left)\r\n\r\n        let tl = gsap.timeline(); \r\n\r\n        let another = gsap.timeline();\r\n\r\n        tl.to(revealsRef.current[0], {backgroundColor:\"blue\"})\r\n        .to(revealsRef.current[10], 1, {backgroundColor:\"blue\"})\r\n        \r\n        .to(revealsRef.current[0], 0.9, {backgroundColor:\"blue\",y: 400,delay: 0.5})\r\n        .to(revealsRef.current[10], 0.9, {backgroundColor:\"blue\",y: 400,delay: 0.5})\r\n    \r\n        .to(revealsRef.current[0], 0.9, {x:  (rect2.right-rect.right),delay: 0.5},\"-=.5\")\r\n        .to(revealsRef.current[10], 0.9, {x: -(rect2.right-rect.right) ,delay: 0.5},\"-=.5\")\r\n        \r\n        .to(revealsRef.current[0], 0.9, {y: -(rect2.bottom-rect2.top+ revealsRef.current[10]),delay: 0.5,backgroundColor:\"cadetblue\"})\r\n        .to(revealsRef.current[10], 0.9, {y: -(rect.bottom-rect.top +revealsRef.current[0]),delay: 0.5,backgroundColor:\"cadetblue\"});\r\n    \r\n        \r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nconst onAnimate2 = () => {\r\n\r\n\r\n\r\n    const rect = revealsRefMobile.current[0].getBoundingClientRect();\r\n    console.log(rect.top, rect.right, rect.bottom, rect.left)\r\n\r\n    const rect2 = revealsRefMobile.current[10].getBoundingClientRect();\r\n    console.log(rect2.top, rect2.right, rect2.bottom, rect2.left)\r\n\r\n\r\n    let tl = gsap.timeline(); \r\n\r\n\r\n    tl.to(revealsRef.current[0], {backgroundColor:\"blue\"})\r\n    .to(revealsRef.current[10], 1, {backgroundColor:\"blue\"})\r\n    \r\n    \r\n    .to(revealsRefMobile.current[0], 0.9, {x: 200,delay: 0.5,backgroundColor:\"blue\"})\r\n    .to(revealsRefMobile.current[10], 0.9, {x: 200,delay: 0.5,backgroundColor:\"blue\"})\r\n\r\n    .to(revealsRefMobile.current[0],  0.9,{y:  (rect2.bottom-rect.bottom),delay: 0.5},\"-=.5\")\r\n    .to(revealsRefMobile.current[10],  0.9,{y: -(rect2.bottom-rect.bottom) ,delay: 0.5},\"-=.5\")\r\n    \r\n    .to(revealsRefMobile.current[0], 0.9, {x: -(rect2.bottom-rect2.top+ revealsRefMobile.current[10]),delay: 0.5,backgroundColor:\"cadetblue\"})\r\n    .to(revealsRefMobile.current[10], 0.9, {x: -(rect.bottom-rect.top +revealsRef.current[0]),delay: 0.5,backgroundColor:\"cadetblue\"});\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nconst onAnimateFloopfy = () => {\r\n\r\n\r\n  let tl = gsap.timeline(); \r\n\r\n\r\n  for(let i = 0 ;i<revealsRef.current.length;i++)\r\n  {\r\n      \r\n      tl.to(revealsRef.current[i], 0.1, {y: 100,duration:2})\r\n      .to(revealsRef.current[i], 0.1, {y: -10,duration:2});\r\n  }\r\n\r\n  \r\n  for(let i = 0 ;i<revealsRef.current.length;i++)\r\n  {\r\n      \r\n      tl.to(revealsRef.current[i], 0.01, {y: 100,duration:2})\r\n      .to(revealsRef.current[i], 0.01, {y: -10,duration:2});\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"insertion\" >\r\n\r\n    <p >Insertion Sort</p>\r\n\r\n    <button onClick={initialize}>Run1</button>\r\n\r\n<button onClick={onAnimate2}>Run2</button>\r\n\r\n <section className=\"blocksNumberWeb\" style={{display:\"flex\", flexDirection:\"row\",width:\"1200px\"}}>\r\n\r\n  {values.map((num,index)=>{\r\n\r\n     return (\r\n         <div className=\"blocksNumber\"  key={num} ref={addToRefs}  style={{display:\"flex\", flexDirection:\"column\",width:\"100%\",alignItems:\"center\",height:\"100vh\"}}>\r\n\r\n         \r\n         <div>\r\n\r\n         <p style={{margin:\"1px\",padding:\"1px\",color:\"white\"}} >{num}</p>\r\n\r\n         </div>\r\n\r\n         <div \r\n        \r\n         className=\"block\"\r\n         style={{height:`${num*10}px`, backgroundColor:\"ivory\",margin:\"5px\",width:\"80%\"}}\r\n     \r\n         onClick={onAnimateFloopfy}\r\n         >\r\n\r\n         </div>\r\n         </div>\r\n     )\r\n\r\n  })}\r\n\r\n </section>\r\n\r\n <section className=\"blocksNumberMobile\" style={{display:\"flex\", flexDirection:\"column\",width:\"100vw\",justifyContent:\"center\",alignItems:\"center\" }}>\r\n\r\n     {values.map((num,index)=>{\r\n\r\n     return (\r\n         <div className=\"blocksNumber\"   key={num} ref={addToRefsMobile} style={{display:\"flex\", flexDirection:\"row\",width:\"100%\", alignItems:\"center\",margin:\"0\",padding:\"0\"}}>\r\n\r\n         <div >\r\n\r\n         <p style={{margin:\"2px\",padding:\"2px\",fontSize:\"11px\",color:\"white\"}} >{num}</p>\r\n\r\n         </div>\r\n\r\n         <div \r\n\r\n         className=\"block\"\r\n         style={{width:`${num*6}px`, backgroundColor:\"ivory\",marginLeft:\"5px\",padding:\"0\",height:\"10px\"}}\r\n         \r\n         >\r\n             \r\n         </div>\r\n         </div>\r\n     )\r\n\r\n     })}\r\n\r\n</section>\r\n\r\n</div>\r\n  );\r\n}\r\n\r\nexport default Bubble;\r\n"]},"metadata":{},"sourceType":"module"}