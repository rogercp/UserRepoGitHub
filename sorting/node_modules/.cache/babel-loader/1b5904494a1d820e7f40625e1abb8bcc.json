{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Roger\\\\Code\\\\Projects\\\\sortingRepo\\\\sorting\\\\src\\\\components\\\\Bubble.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport { gsap } from 'gsap';\nimport '../App.css';\n\nconst randomListOfNums = n => {\n  const nums = [];\n\n  for (let i = 0; i < n; i++) {\n    let randomNum = Math.floor(Math.random() * 25) + 1;\n    nums.push(randomNum);\n  }\n\n  return nums;\n};\n\nfunction Bubble() {\n  const myVals = randomListOfNums(5);\n  const [values, setValues] = useState(myVals);\n  const [mobileValues, setMobileValues] = useState(randomListOfNums(5));\n  const revealsRef = React.useRef([]);\n  let newArrayState = revealsRef.current = [];\n  const [revealsRefs, setRevealsRefs] = useState(newArrayState);\n  console.log(values, \"values\"); // revealsRefs = [];\n\n  const revealsRefMobile = React.useRef([]);\n  revealsRefMobile.current = [];\n  const useEffect = (() => {}, []);\n\n  const bubbleSort = async () => {\n    // const masterTimeLine = gsap.timeline()\n    var swapped = true;\n\n    while (swapped) {\n      swapped = false;\n\n      for (var i = 0; i < myVals.length - 1; i++) {\n        let num1 = Number(myVals[i]);\n        let num2 = Number(myVals[i + 1]); // console.log(revealsRefs,\"valuesbefore\")\n\n        if (num1 > num2) {\n          await iterationanimation(i, i + 1);\n          let arrCopy1 = [...values];\n          var temp = myVals[i];\n          myVals[i] = myVals[i + 1];\n          myVals[i + 1] = temp;\n          setValues(arrCopy1);\n          let arrCopyRefs = [...revealsRefs];\n          var temp2 = arrCopyRefs[i];\n          arrCopyRefs[i] = arrCopyRefs[i + 1];\n          arrCopyRefs[i + 1] = temp2;\n          setRevealsRefs(arrCopyRefs);\n          i - 1;\n          swapped = true; // console.log(revealsRefs,\"valuesafter\")\n        } else {\n          await iterationanimationNoSwap(i, i + 1);\n        }\n      }\n    }\n\n    console.log(values, \"values\"); // onAnimateFloopfy();\n  };\n\n  const iterationanimationNoSwap = (current, next) => {\n    const rect = newArrayState[current].getBoundingClientRect();\n    console.log(rect.top, rect.right, rect.bottom, rect.left);\n    const rect2 = newArrayState[next].getBoundingClientRect();\n    console.log(rect2.top, rect2.right, rect2.bottom, rect2.left);\n    let tl = gsap.timeline({\n      autoRemoveChildren: true\n    });\n    tl.to(newArrayState[current], {\n      backgroundColor: \"blue\"\n    }).to(newArrayState[next], .5, {\n      backgroundColor: \"blue\"\n    }).to(newArrayState[current], 0.1, {\n      backgroundColor: \"blue\",\n      y: 400,\n      delay: 0.5\n    }).to(newArrayState[next], 0.1, {\n      backgroundColor: \"blue\",\n      y: 400,\n      delay: 0.5\n    }).to(newArrayState[current], 0.1, {\n      y: -(rect2.bottom - rect2.top + newArrayState[next]),\n      delay: 0.5,\n      backgroundColor: \"cadetblue\"\n    }).to(newArrayState[next], 0.1, {\n      y: -(rect.bottom - rect.top + newArrayState[current]),\n      delay: 0.5,\n      backgroundColor: \"cadetblue\"\n    });\n    return tl;\n  };\n\n  const iterationanimation = (current, next) => {\n    console.log(\"hitting\");\n    const rect = revealsRefs[current].getBoundingClientRect();\n    const rect2 = revealsRefs[next].getBoundingClientRect();\n    let tl2 = gsap.timeline({\n      autoRemoveChildren: true\n    });\n    tl2.to(revealsRefs[current], {\n      backgroundColor: \"blue\"\n    }).to(revealsRefs[next], .5, {\n      backgroundColor: \"blue\"\n    }).to(revealsRefs[current], 0.1, {\n      backgroundColor: \"blue\",\n      y: 400,\n      delay: 0.5\n    }).to(revealsRefs[next], 0.1, {\n      backgroundColor: \"blue\",\n      y: 400,\n      delay: 0.5\n    }).to(revealsRefs[current], 0.1, {\n      x: rect2.right - rect.right,\n      delay: 0.5\n    }, \"-=.5\").to(revealsRefs[next], 0.1, {\n      x: -(rect2.right - rect.right),\n      delay: 0.5\n    }, \"-=.5\").to(revealsRefs[current], 0.1, {\n      y: -(rect2.bottom - rect2.top + revealsRefs[next]),\n      delay: 0.5,\n      backgroundColor: \"cadetblue\"\n    }).to(revealsRefs[next], 0.1, {\n      y: -(rect.bottom - rect.top + revealsRefs[current]),\n      delay: 0.5,\n      backgroundColor: \"cadetblue\"\n    });\n    return tl2;\n  };\n\n  const initialize = () => {\n    bubbleSort();\n  };\n\n  const addToRefs = el => {\n    if (el && !newArrayState.includes(el)) {\n      newArrayState.push(el);\n    }\n  };\n\n  const addToRefsMobile = el => {\n    if (el && !revealsRefMobile.current.includes(el)) {\n      revealsRefMobile.current.push(el);\n    }\n  }; // const onAnimate1 = () => {\n  //         const rect = revealsRefs.current[0].getBoundingClientRect();\n  //         console.log(rect.top, rect.right, rect.bottom, rect.left)\n  //         const rect2 = revealsRefs.current[10].getBoundingClientRect();\n  //         console.log(rect2.top, rect2.right, rect2.bottom, rect2.left)\n  //         let tl = gsap.timeline(); \n  //         let another = gsap.timeline();\n  //         tl.to(revealsRefs.current[0], {backgroundColor:\"blue\"})\n  //         .to(revealsRefs.current[10], 1, {backgroundColor:\"blue\"})\n  //         .to(revealsRefs.current[0], 0.9, {backgroundColor:\"blue\",y: 400,delay: 0.5})\n  //         .to(revealsRefs.current[10], 0.9, {backgroundColor:\"blue\",y: 400,delay: 0.5})\n  //         .to(revealsRefs.current[0], 0.9, {x:  (rect2.right-rect.right),delay: 0.5},\"-=.5\")\n  //         .to(revealsRefs.current[10], 0.9, {x: -(rect2.right-rect.right) ,delay: 0.5},\"-=.5\")\n  //         .to(revealsRefs.current[0], 0.9, {y: -(rect2.bottom-rect2.top+ revealsRefs.current[10]),delay: 0.5,backgroundColor:\"cadetblue\"})\n  //         .to(revealsRefs.current[10], 0.9, {y: -(rect.bottom-rect.top +revealsRefs.current[0]),delay: 0.5,backgroundColor:\"cadetblue\"});\n  // }\n  // const onAnimate2 = () => {\n  //     const rect = revealsRefMobile.current[0].getBoundingClientRect();\n  //     console.log(rect.top, rect.right, rect.bottom, rect.left)\n  //     const rect2 = revealsRefMobile.current[10].getBoundingClientRect();\n  //     console.log(rect2.top, rect2.right, rect2.bottom, rect2.left)\n  //     let tl = gsap.timeline(); \n  //     tl.to(revealsRefs[0], {backgroundColor:\"blue\"})\n  //     .to(revealsRefs[10], 1, {backgroundColor:\"blue\"})\n  //     .to(revealsRefMobile.current[0], 0.9, {x: 200,delay: 0.5,backgroundColor:\"blue\"})\n  //     .to(revealsRefMobile.current[10], 0.9, {x: 200,delay: 0.5,backgroundColor:\"blue\"})\n  //     .to(revealsRefMobile.current[0],  0.9,{y:  (rect2.bottom-rect.bottom),delay: 0.5},\"-=.5\")\n  //     .to(revealsRefMobile.current[10],  0.9,{y: -(rect2.bottom-rect.bottom) ,delay: 0.5},\"-=.5\")\n  //     .to(revealsRefMobile.current[0], 0.9, {x: -(rect2.bottom-rect2.top+ revealsRefMobile.current[10]),delay: 0.5,backgroundColor:\"cadetblue\"})\n  //     .to(revealsRefMobile.current[10], 0.9, {x: -(rect.bottom-rect.top +revealsRefs[0]),delay: 0.5,backgroundColor:\"cadetblue\"});\n  // }\n  // const onAnimateFloopfy = () => {\n  //   let tl = gsap.timeline(); \n  //   for(let i = 0 ;i<revealsRefs.length;i++)\n  //   {\n  //       tl.to(revealsRefs[i], 0.1, {y: 100,duration:2})\n  //       .to(revealsRefs[i], 0.1, {y: -10,duration:2});\n  //   }\n  //   for(let i = 0 ;i<revealsRefs.length;i++)\n  //   {\n  //       tl.to(revealsRefs[i], 0.01, {y: 100,duration:2})\n  //       .to(revealsRefs[i], 0.01, {y: -10,duration:2});\n  //   }\n  // }\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"insertion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 5\n    }\n  }, \"Insertion Sort\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: initialize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 5\n    }\n  }, \"Run1\"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 1\n    }\n  }, \"Run2\"), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"blocksNumberWeb\",\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      width: \"1200px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 2\n    }\n  }, values.map((num, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"blocksNumber\",\n      key: num,\n      ref: addToRefs,\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"100%\",\n        alignItems: \"center\",\n        height: \"100vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        margin: \"1px\",\n        padding: \"1px\",\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 10\n      }\n    }, num)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"block\",\n      style: {\n        height: `${num * 10}px`,\n        backgroundColor: \"ivory\",\n        margin: \"5px\",\n        width: \"80%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 10\n      }\n    }));\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"blocksNumberMobile\",\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      width: \"100vw\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 2\n    }\n  }, values.map((num, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"blocksNumber\",\n      key: num,\n      ref: addToRefsMobile,\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        width: \"100%\",\n        alignItems: \"center\",\n        margin: \"0\",\n        padding: \"0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        margin: \"2px\",\n        padding: \"2px\",\n        fontSize: \"11px\",\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 10\n      }\n    }, num)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"block\",\n      style: {\n        width: `${num * 6}px`,\n        backgroundColor: \"ivory\",\n        marginLeft: \"5px\",\n        padding: \"0\",\n        height: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 10\n      }\n    }));\n  })));\n}\n\nexport default Bubble;","map":{"version":3,"sources":["C:/Users/Roger/Code/Projects/sortingRepo/sorting/src/components/Bubble.js"],"names":["React","useEffect","useRef","useState","gsap","randomListOfNums","n","nums","i","randomNum","Math","floor","random","push","Bubble","myVals","values","setValues","mobileValues","setMobileValues","revealsRef","newArrayState","current","revealsRefs","setRevealsRefs","console","log","revealsRefMobile","bubbleSort","swapped","length","num1","Number","num2","iterationanimation","arrCopy1","temp","arrCopyRefs","temp2","iterationanimationNoSwap","next","rect","getBoundingClientRect","top","right","bottom","left","rect2","tl","timeline","autoRemoveChildren","to","backgroundColor","y","delay","tl2","x","initialize","addToRefs","el","includes","addToRefsMobile","display","flexDirection","width","map","num","index","alignItems","height","margin","padding","color","justifyContent","fontSize","marginLeft"],"mappings":"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","sourcesContent":["import React,{useEffect,useRef,useState}  from 'react';\r\nimport {gsap} from 'gsap';\r\nimport '../App.css';\r\n\r\n\r\nconst randomListOfNums =(n)=>\r\n{\r\n    const nums = [];\r\n\r\n    for( let i =0; i<n; i++)\r\n    {\r\n        let randomNum = Math.floor(Math.random() * 25) + 1;\r\n\r\n        nums.push(randomNum);\r\n\r\n    }\r\n\r\n    return nums;   \r\n\r\n}\r\n\r\nfunction Bubble() {\r\n\r\n\r\n  const myVals = randomListOfNums(5)\r\n\r\n    const [values, setValues] = useState(myVals)\r\n\r\n    const [mobileValues, setMobileValues] = useState(randomListOfNums(5))\r\n\r\n    const revealsRef = React.useRef([]);\r\n\r\n    let newArrayState =  revealsRef.current = []\r\n\r\n    const [revealsRefs,setRevealsRefs] = useState(newArrayState);\r\n\r\n\r\n     console.log(values,\"values\")\r\n\r\n\r\n    // revealsRefs = [];\r\n\r\n\r\n\r\n    const revealsRefMobile= React.useRef([]);\r\n    revealsRefMobile.current = [];\r\n\r\n\r\n\r\n\r\n\r\n    const useEffect=(()=>\r\n    {\r\n\r\n\r\n\r\n\r\n\r\n\r\n      \r\n\r\n    },[]);\r\n\r\n\r\n\r\n      \r\nconst  bubbleSort = async () =>\r\n{\r\n\r\n\r\n// const masterTimeLine = gsap.timeline()\r\n\r\n\r\nvar swapped = true;\r\n\r\n  \twhile (swapped){\r\n\r\n    swapped = false;\r\n\r\n\r\n\t\tfor(var i=0 ; i<myVals.length-1; i++){\r\n\r\n      let num1 = Number(myVals[i]);\r\n\r\n      let num2 = Number(myVals[i+1]);\r\n\r\n      // console.log(revealsRefs,\"valuesbefore\")\r\n\r\n\t\t\tif( num1 > num2){\r\n\r\n        await iterationanimation(i,i+1);\r\n\r\n        let arrCopy1 = [...values]\r\n\r\n        var temp = myVals[i];\r\n\r\n        myVals[i] = myVals[i+1]\r\n\r\n        myVals[i+1] = temp\r\n        \r\n        setValues(arrCopy1)\r\n\r\n\r\n        let arrCopyRefs = [...revealsRefs]\r\n\r\n        var temp2 = arrCopyRefs[i];\r\n\r\n        arrCopyRefs[i] = arrCopyRefs[i+1]\r\n\r\n        arrCopyRefs[i+1] = temp2\r\n\r\n        setRevealsRefs(arrCopyRefs)\r\n        \r\n\r\n        i -1;\r\n\r\n\r\n        swapped = true;\r\n\r\n\r\n        // console.log(revealsRefs,\"valuesafter\")\r\n\r\n      }else\r\n      {\r\n         await iterationanimationNoSwap(i,i+1);\r\n      }\r\n \r\n\r\n    }\r\n\r\n  }\r\n\r\n  console.log(values,\"values\")\r\n  // onAnimateFloopfy();\r\n\r\n\r\n}\r\n\r\nconst iterationanimationNoSwap= (current,next)=>{\r\n\r\n\r\n\r\n        const rect = newArrayState[current].getBoundingClientRect();\r\n        console.log(rect.top, rect.right, rect.bottom, rect.left)\r\n\r\n        const rect2 = newArrayState[next].getBoundingClientRect();\r\n        console.log(rect2.top, rect2.right, rect2.bottom, rect2.left)\r\n\r\n        let tl = gsap.timeline({autoRemoveChildren: true}); \r\n\r\n         tl.to(newArrayState[current], {backgroundColor:\"blue\"})\r\n        .to(newArrayState[next], .5, {backgroundColor:\"blue\"})\r\n        \r\n        .to(newArrayState[current], 0.1, {backgroundColor:\"blue\",y: 400,delay: 0.5})\r\n        .to(newArrayState[next], 0.1, {backgroundColor:\"blue\",y: 400,delay: 0.5})\r\n\r\n        .to(newArrayState[current], 0.1, {y: -(rect2.bottom-rect2.top+ newArrayState[next]),delay: 0.5,backgroundColor:\"cadetblue\"})\r\n        .to(newArrayState[next], 0.1, {y: -(rect.bottom-rect.top +newArrayState[current]),delay: 0.5,backgroundColor:\"cadetblue\"})\r\n\r\n        return tl;\r\n\r\n\r\n        \r\n}\r\n\r\n\r\nconst iterationanimation=  (current,next)=>{\r\n\r\nconsole.log(\"hitting\")\r\n\r\n  const rect = revealsRefs[current].getBoundingClientRect();\r\n  const rect2 = revealsRefs[next].getBoundingClientRect();\r\n\r\n  let tl2 = gsap.timeline({autoRemoveChildren: true}); \r\n\r\n   tl2.to(revealsRefs[current], {backgroundColor:\"blue\"})\r\n  .to(revealsRefs[next], .5, {backgroundColor:\"blue\"})\r\n  \r\n  .to(revealsRefs[current], 0.1, {backgroundColor:\"blue\",y: 400,delay: 0.5})\r\n  .to(revealsRefs[next], 0.1, {backgroundColor:\"blue\",y: 400,delay: 0.5})\r\n\r\n  .to(revealsRefs[current], 0.1, {x:  (rect2.right-rect.right),delay: 0.5},\"-=.5\")\r\n  .to(revealsRefs[next], 0.1, {x: -(rect2.right-rect.right),delay: 0.5},\"-=.5\")\r\n  \r\n  .to(revealsRefs[current], 0.1, {y: -(rect2.bottom-rect2.top+ revealsRefs[next]),delay: 0.5,backgroundColor:\"cadetblue\"})\r\n  .to(revealsRefs[next], 0.1, {y: -(rect.bottom-rect.top +revealsRefs[current]),delay: 0.5,backgroundColor:\"cadetblue\"})\r\n\r\n\r\n\r\n  return tl2;\r\n\r\n}\r\n\r\n\r\n\r\nconst initialize  = ()=>{\r\n\r\nbubbleSort();\r\n\r\n}\r\n\r\n\r\nconst addToRefs = (el) =>\r\n{\r\n\r\n    if(el && !newArrayState.includes(el))\r\n    {\r\n      newArrayState.push(el);\r\n    }\r\n\r\n}\r\n\r\nconst addToRefsMobile = (el) =>\r\n{\r\n\r\n    if(el && !revealsRefMobile.current.includes(el))\r\n    {\r\n        revealsRefMobile.current.push(el);\r\n    }\r\n}\r\n\r\n\r\n// const onAnimate1 = () => {\r\n\r\n\r\n//         const rect = revealsRefs.current[0].getBoundingClientRect();\r\n//         console.log(rect.top, rect.right, rect.bottom, rect.left)\r\n\r\n//         const rect2 = revealsRefs.current[10].getBoundingClientRect();\r\n//         console.log(rect2.top, rect2.right, rect2.bottom, rect2.left)\r\n\r\n//         let tl = gsap.timeline(); \r\n\r\n//         let another = gsap.timeline();\r\n\r\n//         tl.to(revealsRefs.current[0], {backgroundColor:\"blue\"})\r\n//         .to(revealsRefs.current[10], 1, {backgroundColor:\"blue\"})\r\n        \r\n//         .to(revealsRefs.current[0], 0.9, {backgroundColor:\"blue\",y: 400,delay: 0.5})\r\n//         .to(revealsRefs.current[10], 0.9, {backgroundColor:\"blue\",y: 400,delay: 0.5})\r\n    \r\n//         .to(revealsRefs.current[0], 0.9, {x:  (rect2.right-rect.right),delay: 0.5},\"-=.5\")\r\n//         .to(revealsRefs.current[10], 0.9, {x: -(rect2.right-rect.right) ,delay: 0.5},\"-=.5\")\r\n        \r\n//         .to(revealsRefs.current[0], 0.9, {y: -(rect2.bottom-rect2.top+ revealsRefs.current[10]),delay: 0.5,backgroundColor:\"cadetblue\"})\r\n//         .to(revealsRefs.current[10], 0.9, {y: -(rect.bottom-rect.top +revealsRefs.current[0]),delay: 0.5,backgroundColor:\"cadetblue\"});\r\n    \r\n        \r\n\r\n\r\n\r\n// }\r\n\r\n\r\n\r\n// const onAnimate2 = () => {\r\n\r\n\r\n\r\n//     const rect = revealsRefMobile.current[0].getBoundingClientRect();\r\n//     console.log(rect.top, rect.right, rect.bottom, rect.left)\r\n\r\n//     const rect2 = revealsRefMobile.current[10].getBoundingClientRect();\r\n//     console.log(rect2.top, rect2.right, rect2.bottom, rect2.left)\r\n\r\n\r\n//     let tl = gsap.timeline(); \r\n\r\n\r\n//     tl.to(revealsRefs[0], {backgroundColor:\"blue\"})\r\n//     .to(revealsRefs[10], 1, {backgroundColor:\"blue\"})\r\n    \r\n    \r\n//     .to(revealsRefMobile.current[0], 0.9, {x: 200,delay: 0.5,backgroundColor:\"blue\"})\r\n//     .to(revealsRefMobile.current[10], 0.9, {x: 200,delay: 0.5,backgroundColor:\"blue\"})\r\n\r\n//     .to(revealsRefMobile.current[0],  0.9,{y:  (rect2.bottom-rect.bottom),delay: 0.5},\"-=.5\")\r\n//     .to(revealsRefMobile.current[10],  0.9,{y: -(rect2.bottom-rect.bottom) ,delay: 0.5},\"-=.5\")\r\n    \r\n//     .to(revealsRefMobile.current[0], 0.9, {x: -(rect2.bottom-rect2.top+ revealsRefMobile.current[10]),delay: 0.5,backgroundColor:\"cadetblue\"})\r\n//     .to(revealsRefMobile.current[10], 0.9, {x: -(rect.bottom-rect.top +revealsRefs[0]),delay: 0.5,backgroundColor:\"cadetblue\"});\r\n\r\n\r\n\r\n\r\n\r\n// }\r\n\r\n\r\n\r\n// const onAnimateFloopfy = () => {\r\n\r\n\r\n//   let tl = gsap.timeline(); \r\n\r\n\r\n//   for(let i = 0 ;i<revealsRefs.length;i++)\r\n//   {\r\n      \r\n//       tl.to(revealsRefs[i], 0.1, {y: 100,duration:2})\r\n//       .to(revealsRefs[i], 0.1, {y: -10,duration:2});\r\n//   }\r\n\r\n  \r\n//   for(let i = 0 ;i<revealsRefs.length;i++)\r\n//   {\r\n      \r\n//       tl.to(revealsRefs[i], 0.01, {y: 100,duration:2})\r\n//       .to(revealsRefs[i], 0.01, {y: -10,duration:2});\r\n\r\n//   }\r\n\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"insertion\" >\r\n\r\n    <p >Insertion Sort</p>\r\n\r\n    <button onClick={initialize}>Run1</button>\r\n\r\n<button >Run2</button>\r\n\r\n <section className=\"blocksNumberWeb\" style={{display:\"flex\", flexDirection:\"row\",width:\"1200px\"}}>\r\n\r\n  {values.map((num,index)=>{\r\n\r\n     return (\r\n         <div className=\"blocksNumber\"  key={num} ref={addToRefs}  style={{display:\"flex\", flexDirection:\"column\",width:\"100%\",alignItems:\"center\",height:\"100vh\"}}>\r\n\r\n         \r\n         <div>\r\n\r\n         <p style={{margin:\"1px\",padding:\"1px\",color:\"white\"}} >{num}</p>\r\n\r\n         </div>\r\n\r\n         <div \r\n        \r\n         className=\"block\"\r\n         style={{height:`${num*10}px`, backgroundColor:\"ivory\",margin:\"5px\",width:\"80%\"}}\r\n     \r\n  \r\n         >\r\n\r\n         </div>\r\n         </div>\r\n     )\r\n\r\n  })}\r\n\r\n </section>\r\n\r\n <section className=\"blocksNumberMobile\" style={{display:\"flex\", flexDirection:\"column\",width:\"100vw\",justifyContent:\"center\",alignItems:\"center\" }}>\r\n\r\n     {values.map((num,index)=>{\r\n\r\n     return (\r\n         <div className=\"blocksNumber\"   key={num} ref={addToRefsMobile} style={{display:\"flex\", flexDirection:\"row\",width:\"100%\", alignItems:\"center\",margin:\"0\",padding:\"0\"}}>\r\n\r\n         <div >\r\n\r\n         <p style={{margin:\"2px\",padding:\"2px\",fontSize:\"11px\",color:\"white\"}} >{num}</p>\r\n\r\n         </div>\r\n\r\n         <div \r\n\r\n         className=\"block\"\r\n         style={{width:`${num*6}px`, backgroundColor:\"ivory\",marginLeft:\"5px\",padding:\"0\",height:\"10px\"}}\r\n         \r\n         >\r\n             \r\n         </div>\r\n         </div>\r\n     )\r\n\r\n     })}\r\n\r\n</section>\r\n\r\n</div>\r\n  );\r\n}\r\n\r\nexport default Bubble;\r\n"]},"metadata":{},"sourceType":"module"}