{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Roger\\\\Code\\\\Projects\\\\sortingRepo\\\\sorting\\\\src\\\\components\\\\Insertion.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport '../App.css';\nimport { gsap } from 'gsap';\n\nconst randomListOfNums = n => {\n  const nums = [];\n\n  for (let i = 0; i < n; i++) {\n    let randomNum = Math.floor(Math.random() * 20) + 1;\n    nums.push(randomNum);\n  }\n\n  return nums;\n};\n\nfunction Insertion() {\n  const [values, setValues] = useState(randomListOfNums(20)); // const [mobileValues, setMobileValues] = useState(randomListOfNums(20))\n\n  const revealsRef = React.useRef([]);\n  revealsRef.current = []; // const revealsRefMobile= React.useRef([]);\n  // revealsRefMobile.current = [];\n\n  const useEffect = (() => {}, []);\n\n  const addToRefs = el => {\n    if (el && !revealsRef.current.includes(el)) {\n      revealsRef.current.push(el);\n    }\n  };\n\n  const addToRefsMobile = el => {\n    if (el && !revealsRefMobile.current.includes(el)) {\n      revealsRefMobile.current.push(el);\n    }\n  };\n\n  const onAnimate1 = () => {\n    const rect = revealsRef.current[0].getBoundingClientRect();\n    console.log(rect.top, rect.right, rect.bottom, rect.left);\n    const rect2 = revealsRef.current[10].getBoundingClientRect();\n    console.log(rect2.top, rect2.right, rect2.bottom, rect2.left);\n    let tl = gsap.timeline();\n    tl.to(revealsRef.current[0], 0.9, {\n      y: 400,\n      delay: 0.5,\n      backgroundColor: \"red\"\n    }).to(revealsRef.current[10], 0.9, {\n      y: 400,\n      delay: 0.5,\n      backgroundColor: \"red\"\n    }).to(revealsRef.current[0], 0.9, {\n      x: rect2.right - rect.right,\n      delay: 0.5\n    }).to(revealsRef.current[10], 0.9, {\n      x: -(rect2.right - rect.right),\n      delay: 0.5\n    }).to(revealsRef.current[0], 0.9, {\n      y: -(rect2.bottom - rect2.top + revealsRef.current[10]),\n      delay: 0.5,\n      backgroundColor: \"white\"\n    }).to(revealsRef.current[10], 0.9, {\n      y: -(rect.bottom - rect.top + revealsRef.current[0]),\n      delay: 0.5,\n      backgroundColor: \"white\"\n    });\n  };\n\n  const animateayy = () => {\n    if (revealsRef.current.length == revealsRef.length) {\n      revealsRef.current = [];\n    } else {\n      addToRefs();\n    }\n  };\n\n  const onAnimate2 = () => {\n    const rect = revealsRefMobile.current[0].getBoundingClientRect();\n    console.log(rect.top, rect.right, rect.bottom, rect.left);\n    const rect2 = revealsRefMobile.current[10].getBoundingClientRect();\n    console.log(rect2.top, rect2.right, rect2.bottom, rect2.left);\n    let tl = gsap.timeline();\n    tl.to(revealsRefMobile.current[0], 0.9, {\n      x: 200,\n      delay: 0.5,\n      backgroundColor: \"red\"\n    }).to(revealsRefMobile.current[10], 0.9, {\n      x: 200,\n      delay: 0.5,\n      backgroundColor: \"red\"\n    }).to(revealsRefMobile.current[0], 0.9, {\n      y: rect2.bottom - rect.bottom,\n      delay: 0.5\n    }).to(revealsRefMobile.current[10], 0.9, {\n      y: -(rect2.bottom - rect.bottom),\n      delay: 0.5\n    }).to(revealsRefMobile.current[0], 0.9, {\n      x: -(rect2.bottom - rect2.top + revealsRefMobile.current[10]),\n      delay: 0.5,\n      backgroundColor: \"white\"\n    }).to(revealsRefMobile.current[10], 0.9, {\n      x: -(rect.bottom - rect.top + revealsRefMobile.current[0]),\n      delay: 0.5,\n      backgroundColor: \"white\"\n    });\n  };\n\n  const onAnimate = () => {\n    let tl = gsap.timeline();\n\n    for (let i = 0; i < revealsRef.current.length; i++) {\n      tl.to(revealsRef.current[i], 0.1, {\n        y: 100,\n        backgroundColor: \"red\",\n        duration: 2\n      }).to(revealsRef.current[i], 0.1, {\n        y: -10,\n        backgroundColor: \"white\",\n        duration: 2\n      });\n    }\n\n    for (let i = 0; i < revealsRef.current.length; i++) {\n      tl.to(revealsRef.current[i], 0.01, {\n        y: 100,\n        backgroundColor: \"red\",\n        duration: 2\n      }).to(revealsRef.current[i], 0.01, {\n        y: -10,\n        backgroundColor: \"white\",\n        duration: 2\n      });\n    }\n  };\n\n  const onAnimateMobile = () => {\n    let tl = gsap.timeline();\n\n    for (let i = 0; i < revealsRefMobile.current.length; i++) {\n      tl.to(revealsRefMobile.current[i], 0.1, {\n        x: 100,\n        backgroundColor: \"red\",\n        duration: 2\n      }).to(revealsRefMobile.current[i], 0.1, {\n        x: -10,\n        backgroundColor: \"white\",\n        duration: 2\n      });\n    }\n\n    for (let i = 0; i < revealsRefMobile.current.length; i++) {\n      tl.to(revealsRefMobile.current[i], 0.01, {\n        x: 100,\n        backgroundColor: \"red\",\n        duration: 2\n      }).to(revealsRefMobile.current[i], 0.01, {\n        x: -10,\n        backgroundColor: \"white\",\n        duration: 2\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"insertion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 12\n    }\n  }, \"Insertion Sort\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onAnimate1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 12\n    }\n  }, \"Run1\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onAnimate2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 6\n    }\n  }, \"Run2\"), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"blocksNumberWeb\",\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      width: \"1200px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }\n  }, values.map((num, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"blocksNumber\",\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"100%\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        margin: \"1px\",\n        padding: \"1px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }\n    }, num)), /*#__PURE__*/React.createElement(\"div\", {\n      key: num,\n      ref: addToRefs,\n      className: \"block\",\n      style: {\n        height: `${num * 10}px`,\n        backgroundColor: \"ivory\",\n        margin: \"5px\",\n        width: \"80%\"\n      },\n      onClick: onAnimate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }\n    }));\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"blocksNumberMobile\",\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      width: \"100vw\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }\n  }, mobileValues.map((num, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"blocksNumber\",\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        width: \"100%\",\n        alignItems: \"center\",\n        margin: \"0\",\n        padding: \"0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"10%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        margin: \"2px\",\n        padding: \"2px\",\n        fontSize: \"11px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }\n    }, num)), /*#__PURE__*/React.createElement(\"div\", {\n      key: num,\n      ref: animateayy,\n      className: \"block\",\n      style: {\n        width: `${num * 6}px`,\n        backgroundColor: \"ivory\",\n        marginLeft: \"5px\",\n        padding: \"0\",\n        height: \"10px\"\n      },\n      onClick: onAnimateMobile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }\n    }));\n  })));\n}\n\nexport default Insertion;","map":{"version":3,"sources":["C:/Users/Roger/Code/Projects/sortingRepo/sorting/src/components/Insertion.js"],"names":["React","useEffect","useRef","useState","gsap","randomListOfNums","n","nums","i","randomNum","Math","floor","random","push","Insertion","values","setValues","revealsRef","current","addToRefs","el","includes","addToRefsMobile","revealsRefMobile","onAnimate1","rect","getBoundingClientRect","console","log","top","right","bottom","left","rect2","tl","timeline","to","y","delay","backgroundColor","x","animateayy","length","onAnimate2","onAnimate","duration","onAnimateMobile","display","flexDirection","width","map","num","index","alignItems","margin","padding","height","justifyContent","mobileValues","fontSize","marginLeft"],"mappings":"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","sourcesContent":["import React ,{useEffect,useRef,useState} from 'react';\r\nimport '../App.css';\r\nimport {gsap} from 'gsap';\r\n\r\n\r\nconst randomListOfNums =(n)=>\r\n{\r\n    const nums = [];\r\n\r\n    for( let i =0; i<n; i++)\r\n    {\r\n        let randomNum = Math.floor(Math.random() * 20) + 1;\r\n\r\n        nums.push(randomNum);\r\n\r\n    }\r\n\r\n    return nums;   \r\n\r\n}\r\n\r\n\r\nfunction Insertion() {\r\n\r\n    const [values, setValues] = useState(randomListOfNums(20))\r\n\r\n    // const [mobileValues, setMobileValues] = useState(randomListOfNums(20))\r\n\r\n\r\n    const revealsRef = React.useRef([]);\r\n\r\n    revealsRef.current = [];\r\n\r\n\r\n\r\n    // const revealsRefMobile= React.useRef([]);\r\n    // revealsRefMobile.current = [];\r\n\r\n    const useEffect=(()=>\r\n    {\r\n\r\n    \r\n\r\n\r\n    },[]);\r\n\r\n\r\nconst addToRefs = (el) =>\r\n{\r\n\r\n    if(el && !revealsRef.current.includes(el))\r\n    {\r\n        revealsRef.current.push(el);\r\n    }\r\n\r\n}\r\n\r\nconst addToRefsMobile = (el) =>\r\n{\r\n\r\n    if(el && !revealsRefMobile.current.includes(el))\r\n    {\r\n        revealsRefMobile.current.push(el);\r\n    }\r\n}\r\n\r\n\r\nconst onAnimate1 = () => {\r\n\r\n    const rect = revealsRef.current[0].getBoundingClientRect();\r\n    console.log(rect.top, rect.right, rect.bottom, rect.left)\r\n\r\n    const rect2 = revealsRef.current[10].getBoundingClientRect();\r\n    console.log(rect2.top, rect2.right, rect2.bottom, rect2.left)\r\n\r\n\r\n    let tl = gsap.timeline(); \r\n\r\n\r\n    tl.to(revealsRef.current[0], 0.9, {y: 400,delay: 0.5,backgroundColor:\"red\"})\r\n    .to(revealsRef.current[10], 0.9, {y: 400,delay: 0.5,backgroundColor:\"red\"})\r\n\r\n    .to(revealsRef.current[0], 0.9, {x:  (rect2.right-rect.right),delay: 0.5})\r\n    .to(revealsRef.current[10], 0.9, {x: -(rect2.right-rect.right) ,delay: 0.5})\r\n    \r\n    .to(revealsRef.current[0], 0.9, {y: -(rect2.bottom-rect2.top+ revealsRef.current[10]),delay: 0.5,backgroundColor:\"white\"})\r\n    .to(revealsRef.current[10], 0.9, {y: -(rect.bottom-rect.top +revealsRef.current[0]),delay: 0.5,backgroundColor:\"white\"});\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nconst animateayy = () =>\r\n{\r\n\r\n    if(revealsRef.current.length == revealsRef.length)\r\n    {\r\n        revealsRef.current = [];\r\n    }\r\n    else\r\n    {\r\n        addToRefs();\r\n    }\r\n    \r\n\r\n}\r\n\r\nconst onAnimate2 = () => {\r\n\r\n\r\n \r\n\r\n    const rect = revealsRefMobile.current[0].getBoundingClientRect();\r\n    console.log(rect.top, rect.right, rect.bottom, rect.left)\r\n\r\n    const rect2 = revealsRefMobile.current[10].getBoundingClientRect();\r\n    console.log(rect2.top, rect2.right, rect2.bottom, rect2.left)\r\n\r\n\r\n    let tl = gsap.timeline(); \r\n\r\n\r\n    tl.to(revealsRefMobile.current[0], 0.9, {x: 200,delay: 0.5,backgroundColor:\"red\"})\r\n    .to(revealsRefMobile.current[10], 0.9, {x: 200,delay: 0.5,backgroundColor:\"red\"})\r\n\r\n    .to(revealsRefMobile.current[0], 0.9, {y:  (rect2.bottom-rect.bottom),delay: 0.5})\r\n    .to(revealsRefMobile.current[10], 0.9, {y: -(rect2.bottom-rect.bottom) ,delay: 0.5})\r\n    \r\n    .to(revealsRefMobile.current[0], 0.9, {x: -(rect2.bottom-rect2.top+ revealsRefMobile.current[10]),delay: 0.5,backgroundColor:\"white\"})\r\n    .to(revealsRefMobile.current[10], 0.9, {x: -(rect.bottom-rect.top +revealsRefMobile.current[0]),delay: 0.5,backgroundColor:\"white\"});\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst onAnimate = () => {\r\n\r\n\r\n    let tl = gsap.timeline(); \r\n  \r\n\r\n    for(let i = 0 ;i<revealsRef.current.length;i++)\r\n    {\r\n        \r\n        tl.to(revealsRef.current[i], 0.1, {y: 100,backgroundColor:\"red\",duration:2})\r\n        .to(revealsRef.current[i], 0.1, {y: -10,backgroundColor:\"white\",duration:2});\r\n    }\r\n\r\n    \r\n    for(let i = 0 ;i<revealsRef.current.length;i++)\r\n    {\r\n        \r\n        tl.to(revealsRef.current[i], 0.01, {y: 100,backgroundColor:\"red\",duration:2})\r\n        .to(revealsRef.current[i], 0.01, {y: -10,backgroundColor:\"white\",duration:2});\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nconst onAnimateMobile = () => {\r\n\r\n    let tl = gsap.timeline(); \r\n\r\n    for(let i = 0 ;i<revealsRefMobile.current.length;i++)\r\n    {\r\n        \r\n        tl.to(revealsRefMobile.current[i], 0.1, {x: 100,backgroundColor:\"red\",duration:2})\r\n        .to(revealsRefMobile.current[i], 0.1, {x: -10,backgroundColor:\"white\",duration:2});\r\n\r\n    }\r\n\r\n    for(let i = 0 ;i<revealsRefMobile.current.length;i++)\r\n    {\r\n        \r\n        tl.to(revealsRefMobile.current[i], 0.01, {x: 100,backgroundColor:\"red\",duration:2})\r\n        .to(revealsRefMobile.current[i], 0.01, {x: -10,backgroundColor:\"white\",duration:2});\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n   \r\n  return (\r\n    <div className=\"insertion\" >\r\n\r\n           <p >Insertion Sort</p>\r\n\r\n           <button onClick={onAnimate1}>Run1</button>\r\n\r\n     <button onClick={onAnimate2}>Run2</button>\r\n\r\n        <section className=\"blocksNumberWeb\" style={{display:\"flex\", flexDirection:\"row\",width:\"1200px\"}}>\r\n\r\n         {values.map((num,index)=>{\r\n\r\n            return (\r\n                <div className=\"blocksNumber\"  style={{display:\"flex\", flexDirection:\"column\",width:\"100%\",alignItems:\"center\"}}>\r\n\r\n                \r\n                <div>\r\n\r\n                <p style={{margin:\"1px\",padding:\"1px\"}} >{num}</p>\r\n\r\n                </div>\r\n\r\n                <div \r\n                key={num}\r\n                ref={addToRefs}\r\n                className=\"block\"\r\n                style={{height:`${num*10}px`, backgroundColor:\"ivory\",margin:\"5px\",width:\"80%\"}}\r\n                onClick={onAnimate}\r\n                >\r\n                    \r\n                </div>\r\n                </div>\r\n            )\r\n\r\n         })}\r\n\r\n        </section>\r\n\r\n        <section className=\"blocksNumberMobile\" style={{display:\"flex\", flexDirection:\"column\",width:\"100vw\",justifyContent:\"center\",alignItems:\"center\" }}>\r\n\r\n            {mobileValues.map((num,index)=>{\r\n\r\n            return (\r\n                <div className=\"blocksNumber\"  style={{display:\"flex\", flexDirection:\"row\",width:\"100%\", alignItems:\"center\",margin:\"0\",padding:\"0\"}}>\r\n\r\n                <div style={{width:\"10%\"}}>\r\n\r\n                <p style={{margin:\"2px\",padding:\"2px\",fontSize:\"11px\"}} >{num}</p>\r\n\r\n                </div>\r\n\r\n                <div \r\n                key={num}\r\n                ref={animateayy}\r\n                className=\"block\"\r\n                style={{width:`${num*6}px`, backgroundColor:\"ivory\",marginLeft:\"5px\",padding:\"0\",height:\"10px\"}}\r\n                onClick={onAnimateMobile}\r\n                >\r\n                    \r\n                    \r\n                </div>\r\n                </div>\r\n            )\r\n\r\n            })}\r\n\r\n</section>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Insertion;\r\n"]},"metadata":{},"sourceType":"module"}