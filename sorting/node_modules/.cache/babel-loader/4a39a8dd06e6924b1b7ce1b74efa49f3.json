{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Roger\\\\Code\\\\Projects\\\\sortingRepo\\\\sorting\\\\src\\\\components\\\\Bubble.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport { gsap } from 'gsap';\nimport '../App.css';\n\nconst randomListOfNums = n => {\n  const nums = [];\n\n  for (let i = 0; i < n; i++) {\n    let randomNum = Math.floor(Math.random() * 25) + 1;\n    nums.push(randomNum);\n  }\n\n  return nums;\n};\n\nfunction Bubble() {\n  const [values, setValues] = useState(randomListOfNums(5));\n  const [mobileValues, setMobileValues] = useState(randomListOfNums(5));\n  const revealsRef = React.useRef([]);\n  let newArrayState = revealsRef.current = []; // const [revealsRefs,setRevealsRefs] = useState(newArrayState);\n\n  console.log(values, \"values\"); // revealsRefs = [];\n\n  const revealsRefMobile = React.useRef([]);\n  revealsRefMobile.current = [];\n  const useEffect = (() => {}, [values]);\n\n  const bubbleSort = async () => {\n    // const masterTimeLine = gsap.timeline()\n    var swapped = true;\n\n    while (swapped) {\n      swapped = false;\n\n      for (var i = 0; i < values.length - 1; i++) {\n        let num1 = Number(values[i]);\n        let num2 = Number(values[i + 1]); // console.log(revealsRefs,\"valuesbefore\")\n\n        if (num1 > num2) {\n          await iterationanimation(i, i + 1); // let arrCopyRefs = [...newArrayState]\n          // var temp = arrCopyRefs[i];\n          // arrCopyRefs[i] = arrCopyRefs[i+1]\n          // arrCopyRefs[i+1] = temp\n          // swapped = true;\n          // console.log(revealsRefs,\"valuesafter\")\n        } else {\n          await iterationanimationNoSwap(i, i + 1);\n        }\n      }\n    }\n\n    console.log(values, \"values\"); // onAnimateFloopfy();\n  };\n\n  const iterationanimationNoSwap = (current, next) => {\n    const rect = newArrayState[current].getBoundingClientRect();\n    console.log(rect.top, rect.right, rect.bottom, rect.left);\n    const rect2 = newArrayState[next].getBoundingClientRect();\n    console.log(rect2.top, rect2.right, rect2.bottom, rect2.left);\n    let tl = gsap.timeline({\n      autoRemoveChildren: true\n    });\n    tl.to(newArrayState[current], {\n      backgroundColor: \"blue\"\n    }).to(newArrayState[next], .5, {\n      backgroundColor: \"blue\"\n    }).to(newArrayState[current], 0.1, {\n      backgroundColor: \"blue\",\n      y: 400,\n      delay: 0.5\n    }).to(newArrayState[next], 0.1, {\n      backgroundColor: \"blue\",\n      y: 400,\n      delay: 0.5\n    }).to(newArrayState[current], 0.1, {\n      y: -(rect2.bottom - rect2.top + newArrayState[next]),\n      delay: 0.5,\n      backgroundColor: \"cadetblue\"\n    }).to(newArrayState[next], 0.1, {\n      y: -(rect.bottom - rect.top + newArrayState[current]),\n      delay: 0.5,\n      backgroundColor: \"cadetblue\"\n    });\n    return tl;\n  };\n\n  const iterationanimation = (current, next) => {\n    console.log(\"hitting\");\n    const rect = newArrayState[current].getBoundingClientRect();\n    const rect2 = newArrayState[next].getBoundingClientRect();\n    let tl2 = gsap.timeline({\n      autoRemoveChildren: true\n    });\n    tl2.to(newArrayState[current], {\n      backgroundColor: \"blue\"\n    }).to(newArrayState[next], .5, {\n      backgroundColor: \"blue\"\n    }).to(newArrayState[current], 0.1, {\n      backgroundColor: \"blue\",\n      y: 400,\n      delay: 0.5\n    }).to(newArrayState[next], 0.1, {\n      backgroundColor: \"blue\",\n      y: 400,\n      delay: 0.5\n    }).to(newArrayState[current], 0.1, {\n      x: rect2.right - rect.right,\n      delay: 0.5\n    }, \"-=.5\").to(newArrayState[next], 0.1, {\n      x: -(rect2.right - rect.right),\n      delay: 0.5\n    }, \"-=.5\").to(newArrayState[current], 0.1, {\n      y: -(rect2.bottom - rect2.top + newArrayState[next]),\n      delay: 0.5,\n      backgroundColor: \"cadetblue\"\n    }).to(newArrayState[next], 0.1, {\n      y: -(rect.bottom - rect.top + newArrayState[current]),\n      delay: 0.5,\n      backgroundColor: \"cadetblue\"\n    });\n    let arrCopy1 = [...values];\n    var temp = arrCopy1[current];\n    arrCopy1[i] = arrCopy1[i + 1];\n    arrCopy1[i + 1] = temp;\n    setValues(arrCopy1);\n    return tl2;\n  };\n\n  const initialize = () => {\n    bubbleSort();\n  };\n\n  const addToRefs = el => {\n    if (el && !newArrayState.includes(el)) {\n      newArrayState.push(el);\n    }\n  };\n\n  const addToRefsMobile = el => {\n    if (el && !revealsRefMobile.current.includes(el)) {\n      revealsRefMobile.current.push(el);\n    }\n  }; // const onAnimate1 = () => {\n  //         const rect = revealsRefs.current[0].getBoundingClientRect();\n  //         console.log(rect.top, rect.right, rect.bottom, rect.left)\n  //         const rect2 = revealsRefs.current[10].getBoundingClientRect();\n  //         console.log(rect2.top, rect2.right, rect2.bottom, rect2.left)\n  //         let tl = gsap.timeline(); \n  //         let another = gsap.timeline();\n  //         tl.to(revealsRefs.current[0], {backgroundColor:\"blue\"})\n  //         .to(revealsRefs.current[10], 1, {backgroundColor:\"blue\"})\n  //         .to(revealsRefs.current[0], 0.9, {backgroundColor:\"blue\",y: 400,delay: 0.5})\n  //         .to(revealsRefs.current[10], 0.9, {backgroundColor:\"blue\",y: 400,delay: 0.5})\n  //         .to(revealsRefs.current[0], 0.9, {x:  (rect2.right-rect.right),delay: 0.5},\"-=.5\")\n  //         .to(revealsRefs.current[10], 0.9, {x: -(rect2.right-rect.right) ,delay: 0.5},\"-=.5\")\n  //         .to(revealsRefs.current[0], 0.9, {y: -(rect2.bottom-rect2.top+ revealsRefs.current[10]),delay: 0.5,backgroundColor:\"cadetblue\"})\n  //         .to(revealsRefs.current[10], 0.9, {y: -(rect.bottom-rect.top +revealsRefs.current[0]),delay: 0.5,backgroundColor:\"cadetblue\"});\n  // }\n  // const onAnimate2 = () => {\n  //     const rect = revealsRefMobile.current[0].getBoundingClientRect();\n  //     console.log(rect.top, rect.right, rect.bottom, rect.left)\n  //     const rect2 = revealsRefMobile.current[10].getBoundingClientRect();\n  //     console.log(rect2.top, rect2.right, rect2.bottom, rect2.left)\n  //     let tl = gsap.timeline(); \n  //     tl.to(revealsRefs[0], {backgroundColor:\"blue\"})\n  //     .to(revealsRefs[10], 1, {backgroundColor:\"blue\"})\n  //     .to(revealsRefMobile.current[0], 0.9, {x: 200,delay: 0.5,backgroundColor:\"blue\"})\n  //     .to(revealsRefMobile.current[10], 0.9, {x: 200,delay: 0.5,backgroundColor:\"blue\"})\n  //     .to(revealsRefMobile.current[0],  0.9,{y:  (rect2.bottom-rect.bottom),delay: 0.5},\"-=.5\")\n  //     .to(revealsRefMobile.current[10],  0.9,{y: -(rect2.bottom-rect.bottom) ,delay: 0.5},\"-=.5\")\n  //     .to(revealsRefMobile.current[0], 0.9, {x: -(rect2.bottom-rect2.top+ revealsRefMobile.current[10]),delay: 0.5,backgroundColor:\"cadetblue\"})\n  //     .to(revealsRefMobile.current[10], 0.9, {x: -(rect.bottom-rect.top +revealsRefs[0]),delay: 0.5,backgroundColor:\"cadetblue\"});\n  // }\n  // const onAnimateFloopfy = () => {\n  //   let tl = gsap.timeline(); \n  //   for(let i = 0 ;i<revealsRefs.length;i++)\n  //   {\n  //       tl.to(revealsRefs[i], 0.1, {y: 100,duration:2})\n  //       .to(revealsRefs[i], 0.1, {y: -10,duration:2});\n  //   }\n  //   for(let i = 0 ;i<revealsRefs.length;i++)\n  //   {\n  //       tl.to(revealsRefs[i], 0.01, {y: 100,duration:2})\n  //       .to(revealsRefs[i], 0.01, {y: -10,duration:2});\n  //   }\n  // }\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"insertion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 5\n    }\n  }, \"Insertion Sort\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: initialize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 5\n    }\n  }, \"Run1\"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 1\n    }\n  }, \"Run2\"), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"blocksNumberWeb\",\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      width: \"1200px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 2\n    }\n  }, values.map((num, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"blocksNumber\",\n      key: num,\n      ref: addToRefs,\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"100%\",\n        alignItems: \"center\",\n        height: \"100vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        margin: \"1px\",\n        padding: \"1px\",\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 10\n      }\n    }, num)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"block\",\n      style: {\n        height: `${num * 10}px`,\n        backgroundColor: \"ivory\",\n        margin: \"5px\",\n        width: \"80%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 10\n      }\n    }));\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"blocksNumberMobile\",\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      width: \"100vw\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 2\n    }\n  }, values.map((num, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"blocksNumber\",\n      key: num,\n      ref: addToRefsMobile,\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        width: \"100%\",\n        alignItems: \"center\",\n        margin: \"0\",\n        padding: \"0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        margin: \"2px\",\n        padding: \"2px\",\n        fontSize: \"11px\",\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 10\n      }\n    }, num)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"block\",\n      style: {\n        width: `${num * 6}px`,\n        backgroundColor: \"ivory\",\n        marginLeft: \"5px\",\n        padding: \"0\",\n        height: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 10\n      }\n    }));\n  })));\n}\n\nexport default Bubble;","map":{"version":3,"sources":["C:/Users/Roger/Code/Projects/sortingRepo/sorting/src/components/Bubble.js"],"names":["React","useEffect","useRef","useState","gsap","randomListOfNums","n","nums","i","randomNum","Math","floor","random","push","Bubble","values","setValues","mobileValues","setMobileValues","revealsRef","newArrayState","current","console","log","revealsRefMobile","bubbleSort","swapped","length","num1","Number","num2","iterationanimation","iterationanimationNoSwap","next","rect","getBoundingClientRect","top","right","bottom","left","rect2","tl","timeline","autoRemoveChildren","to","backgroundColor","y","delay","tl2","x","arrCopy1","temp","initialize","addToRefs","el","includes","addToRefsMobile","display","flexDirection","width","map","num","index","alignItems","height","margin","padding","color","justifyContent","fontSize","marginLeft"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,MAAxB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,SAAQC,IAAR,QAAmB,MAAnB;AACA,OAAO,YAAP;;AAGA,MAAMC,gBAAgB,GAAGC,CAAD,IACxB;AACI,QAAMC,IAAI,GAAG,EAAb;;AAEA,OAAK,IAAIC,CAAC,GAAE,CAAZ,EAAeA,CAAC,GAACF,CAAjB,EAAoBE,CAAC,EAArB,EACA;AACI,QAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,CAAjD;AAEAL,IAAAA,IAAI,CAACM,IAAL,CAAUJ,SAAV;AAEH;;AAED,SAAOF,IAAP;AAEH,CAdD;;AAgBA,SAASO,MAAT,GAAkB;AAEd,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAACE,gBAAgB,CAAC,CAAD,CAAjB,CAApC;AAEA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAACE,gBAAgB,CAAC,CAAD,CAAjB,CAAhD;AAEA,QAAMc,UAAU,GAAGnB,KAAK,CAACE,MAAN,CAAa,EAAb,CAAnB;AAEA,MAAIkB,aAAa,GAAID,UAAU,CAACE,OAAX,GAAqB,EAA1C,CARc,CAUd;;AAGCC,EAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ,EAAmB,QAAnB,EAba,CAiBd;;AAEA,QAAMS,gBAAgB,GAAExB,KAAK,CAACE,MAAN,CAAa,EAAb,CAAxB;AACAsB,EAAAA,gBAAgB,CAACH,OAAjB,GAA2B,EAA3B;AAMA,QAAMpB,SAAS,IAAE,MACjB,CAKC,CANgB,EAMf,CAACc,MAAD,CANa,CAAf;;AAWJ,QAAOU,UAAU,GAAG,YACpB;AAGA;AAEA,QAAIC,OAAO,GAAG,IAAd;;AAEG,WAAOA,OAAP,EAAe;AAEdA,MAAAA,OAAO,GAAG,KAAV;;AAKF,WAAI,IAAIlB,CAAC,GAAC,CAAV,EAAcA,CAAC,GAACO,MAAM,CAACY,MAAP,GAAc,CAA9B,EAAiCnB,CAAC,EAAlC,EAAqC;AAEjC,YAAIoB,IAAI,GAAGC,MAAM,CAACd,MAAM,CAACP,CAAD,CAAP,CAAjB;AAEA,YAAIsB,IAAI,GAAGD,MAAM,CAACd,MAAM,CAACP,CAAC,GAAC,CAAH,CAAP,CAAjB,CAJiC,CAOjC;;AACH,YAAIoB,IAAI,GAAGE,IAAX,EAAgB;AAKX,gBAAMC,kBAAkB,CAACvB,CAAD,EAAGA,CAAC,GAAC,CAAL,CAAxB,CALW,CAWX;AAEA;AAEA;AAEA;AAEA;AAGA;AAED,SAxBJ,MAyBG;AACG,gBAAMwB,wBAAwB,CAACxB,CAAD,EAAGA,CAAC,GAAC,CAAL,CAA9B;AACF;AAGF;AAEF;;AAEDc,IAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ,EAAmB,QAAnB,EAxDF,CAyDE;AAGD,GA7DD;;AA+DA,QAAMiB,wBAAwB,GAAE,CAACX,OAAD,EAASY,IAAT,KAAgB;AAIxC,UAAMC,IAAI,GAAGd,aAAa,CAACC,OAAD,CAAb,CAAuBc,qBAAvB,EAAb;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAYW,IAAI,CAACE,GAAjB,EAAsBF,IAAI,CAACG,KAA3B,EAAkCH,IAAI,CAACI,MAAvC,EAA+CJ,IAAI,CAACK,IAApD;AAEA,UAAMC,KAAK,GAAGpB,aAAa,CAACa,IAAD,CAAb,CAAoBE,qBAApB,EAAd;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAYiB,KAAK,CAACJ,GAAlB,EAAuBI,KAAK,CAACH,KAA7B,EAAoCG,KAAK,CAACF,MAA1C,EAAkDE,KAAK,CAACD,IAAxD;AAEA,QAAIE,EAAE,GAAGrC,IAAI,CAACsC,QAAL,CAAc;AAACC,MAAAA,kBAAkB,EAAE;AAArB,KAAd,CAAT;AAECF,IAAAA,EAAE,CAACG,EAAH,CAAMxB,aAAa,CAACC,OAAD,CAAnB,EAA8B;AAACwB,MAAAA,eAAe,EAAC;AAAjB,KAA9B,EACAD,EADA,CACGxB,aAAa,CAACa,IAAD,CADhB,EACwB,EADxB,EAC4B;AAACY,MAAAA,eAAe,EAAC;AAAjB,KAD5B,EAGAD,EAHA,CAGGxB,aAAa,CAACC,OAAD,CAHhB,EAG2B,GAH3B,EAGgC;AAACwB,MAAAA,eAAe,EAAC,MAAjB;AAAwBC,MAAAA,CAAC,EAAE,GAA3B;AAA+BC,MAAAA,KAAK,EAAE;AAAtC,KAHhC,EAIAH,EAJA,CAIGxB,aAAa,CAACa,IAAD,CAJhB,EAIwB,GAJxB,EAI6B;AAACY,MAAAA,eAAe,EAAC,MAAjB;AAAwBC,MAAAA,CAAC,EAAE,GAA3B;AAA+BC,MAAAA,KAAK,EAAE;AAAtC,KAJ7B,EAMAH,EANA,CAMGxB,aAAa,CAACC,OAAD,CANhB,EAM2B,GAN3B,EAMgC;AAACyB,MAAAA,CAAC,EAAE,EAAEN,KAAK,CAACF,MAAN,GAAaE,KAAK,CAACJ,GAAnB,GAAwBhB,aAAa,CAACa,IAAD,CAAvC,CAAJ;AAAmDc,MAAAA,KAAK,EAAE,GAA1D;AAA8DF,MAAAA,eAAe,EAAC;AAA9E,KANhC,EAOAD,EAPA,CAOGxB,aAAa,CAACa,IAAD,CAPhB,EAOwB,GAPxB,EAO6B;AAACa,MAAAA,CAAC,EAAE,EAAEZ,IAAI,CAACI,MAAL,GAAYJ,IAAI,CAACE,GAAjB,GAAsBhB,aAAa,CAACC,OAAD,CAArC,CAAJ;AAAoD0B,MAAAA,KAAK,EAAE,GAA3D;AAA+DF,MAAAA,eAAe,EAAC;AAA/E,KAP7B;AASD,WAAOJ,EAAP;AAIP,GAzBD;;AA4BA,QAAMV,kBAAkB,GAAE,CAACV,OAAD,EAASY,IAAT,KAAgB;AAE1CX,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AAEE,UAAMW,IAAI,GAAGd,aAAa,CAACC,OAAD,CAAb,CAAuBc,qBAAvB,EAAb;AACA,UAAMK,KAAK,GAAGpB,aAAa,CAACa,IAAD,CAAb,CAAoBE,qBAApB,EAAd;AAEA,QAAIa,GAAG,GAAG5C,IAAI,CAACsC,QAAL,CAAc;AAACC,MAAAA,kBAAkB,EAAE;AAArB,KAAd,CAAV;AAEAK,IAAAA,GAAG,CAACJ,EAAJ,CAAOxB,aAAa,CAACC,OAAD,CAApB,EAA+B;AAACwB,MAAAA,eAAe,EAAC;AAAjB,KAA/B,EACCD,EADD,CACIxB,aAAa,CAACa,IAAD,CADjB,EACyB,EADzB,EAC6B;AAACY,MAAAA,eAAe,EAAC;AAAjB,KAD7B,EAGCD,EAHD,CAGIxB,aAAa,CAACC,OAAD,CAHjB,EAG4B,GAH5B,EAGiC;AAACwB,MAAAA,eAAe,EAAC,MAAjB;AAAwBC,MAAAA,CAAC,EAAE,GAA3B;AAA+BC,MAAAA,KAAK,EAAE;AAAtC,KAHjC,EAICH,EAJD,CAIIxB,aAAa,CAACa,IAAD,CAJjB,EAIyB,GAJzB,EAI8B;AAACY,MAAAA,eAAe,EAAC,MAAjB;AAAwBC,MAAAA,CAAC,EAAE,GAA3B;AAA+BC,MAAAA,KAAK,EAAE;AAAtC,KAJ9B,EAMCH,EAND,CAMIxB,aAAa,CAACC,OAAD,CANjB,EAM4B,GAN5B,EAMiC;AAAC4B,MAAAA,CAAC,EAAIT,KAAK,CAACH,KAAN,GAAYH,IAAI,CAACG,KAAvB;AAA8BU,MAAAA,KAAK,EAAE;AAArC,KANjC,EAM2E,MAN3E,EAOCH,EAPD,CAOIxB,aAAa,CAACa,IAAD,CAPjB,EAOyB,GAPzB,EAO8B;AAACgB,MAAAA,CAAC,EAAE,EAAET,KAAK,CAACH,KAAN,GAAYH,IAAI,CAACG,KAAnB,CAAJ;AAA8BU,MAAAA,KAAK,EAAE;AAArC,KAP9B,EAOwE,MAPxE,EASCH,EATD,CASIxB,aAAa,CAACC,OAAD,CATjB,EAS4B,GAT5B,EASiC;AAACyB,MAAAA,CAAC,EAAE,EAAEN,KAAK,CAACF,MAAN,GAAaE,KAAK,CAACJ,GAAnB,GAAwBhB,aAAa,CAACa,IAAD,CAAvC,CAAJ;AAAmDc,MAAAA,KAAK,EAAE,GAA1D;AAA8DF,MAAAA,eAAe,EAAC;AAA9E,KATjC,EAUCD,EAVD,CAUIxB,aAAa,CAACa,IAAD,CAVjB,EAUyB,GAVzB,EAU8B;AAACa,MAAAA,CAAC,EAAE,EAAEZ,IAAI,CAACI,MAAL,GAAYJ,IAAI,CAACE,GAAjB,GAAsBhB,aAAa,CAACC,OAAD,CAArC,CAAJ;AAAoD0B,MAAAA,KAAK,EAAE,GAA3D;AAA+DF,MAAAA,eAAe,EAAC;AAA/E,KAV9B;AAaK,QAAIK,QAAQ,GAAG,CAAC,GAAGnC,MAAJ,CAAf;AAEC,QAAIoC,IAAI,GAAGD,QAAQ,CAAC7B,OAAD,CAAnB;AAEA6B,IAAAA,QAAQ,CAAC1C,CAAD,CAAR,GAAc0C,QAAQ,CAAC1C,CAAC,GAAC,CAAH,CAAtB;AAEA0C,IAAAA,QAAQ,CAAC1C,CAAC,GAAC,CAAH,CAAR,GAAgB2C,IAAhB;AAEAnC,IAAAA,SAAS,CAACkC,QAAD,CAAT;AAIN,WAAOF,GAAP;AAED,GApCD;;AAwCA,QAAMI,UAAU,GAAI,MAAI;AAExB3B,IAAAA,UAAU;AAET,GAJD;;AAOA,QAAM4B,SAAS,GAAIC,EAAD,IAClB;AAEI,QAAGA,EAAE,IAAI,CAAClC,aAAa,CAACmC,QAAd,CAAuBD,EAAvB,CAAV,EACA;AACElC,MAAAA,aAAa,CAACP,IAAd,CAAmByC,EAAnB;AACD;AAEJ,GARD;;AAUA,QAAME,eAAe,GAAIF,EAAD,IACxB;AAEI,QAAGA,EAAE,IAAI,CAAC9B,gBAAgB,CAACH,OAAjB,CAAyBkC,QAAzB,CAAkCD,EAAlC,CAAV,EACA;AACI9B,MAAAA,gBAAgB,CAACH,OAAjB,CAAyBR,IAAzB,CAA8ByC,EAA9B;AACH;AACJ,GAPD,CAzLkB,CAmMlB;AAGA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAMA;AAIA;AAIA;AACA;AAEA;AACA;AAGA;AAGA;AACA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AAMA;AAIA;AAGA;AAGA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AACA;AAEA;AAEA;;;AAQE,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFA,eAIA;AAAQ,IAAA,OAAO,EAAEF,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA,eAMJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANI,eAQH;AAAS,IAAA,SAAS,EAAC,iBAAnB;AAAqC,IAAA,KAAK,EAAE;AAACK,MAAAA,OAAO,EAAC,MAAT;AAAiBC,MAAAA,aAAa,EAAC,KAA/B;AAAqCC,MAAAA,KAAK,EAAC;AAA3C,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE5C,MAAM,CAAC6C,GAAP,CAAW,CAACC,GAAD,EAAKC,KAAL,KAAa;AAEtB,wBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAA+B,MAAA,GAAG,EAAED,GAApC;AAAyC,MAAA,GAAG,EAAER,SAA9C;AAA0D,MAAA,KAAK,EAAE;AAACI,QAAAA,OAAO,EAAC,MAAT;AAAiBC,QAAAA,aAAa,EAAC,QAA/B;AAAwCC,QAAAA,KAAK,EAAC,MAA9C;AAAqDI,QAAAA,UAAU,EAAC,QAAhE;AAAyEC,QAAAA,MAAM,EAAC;AAAhF,OAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA;AAAG,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAC,KAAR;AAAcC,QAAAA,OAAO,EAAC,KAAtB;AAA4BC,QAAAA,KAAK,EAAC;AAAlC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwDN,GAAxD,CAFA,CAHA,eASA;AAEA,MAAA,SAAS,EAAC,OAFV;AAGA,MAAA,KAAK,EAAE;AAACG,QAAAA,MAAM,EAAE,GAAEH,GAAG,GAAC,EAAG,IAAlB;AAAuBhB,QAAAA,eAAe,EAAC,OAAvC;AAA+CoB,QAAAA,MAAM,EAAC,KAAtD;AAA4DN,QAAAA,KAAK,EAAC;AAAlE,OAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATA,CADJ;AAsBF,GAxBA,CAFF,CARG,eAsCH;AAAS,IAAA,SAAS,EAAC,oBAAnB;AAAwC,IAAA,KAAK,EAAE;AAACF,MAAAA,OAAO,EAAC,MAAT;AAAiBC,MAAAA,aAAa,EAAC,QAA/B;AAAwCC,MAAAA,KAAK,EAAC,OAA9C;AAAsDS,MAAAA,cAAc,EAAC,QAArE;AAA8EL,MAAAA,UAAU,EAAC;AAAzF,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKhD,MAAM,CAAC6C,GAAP,CAAW,CAACC,GAAD,EAAKC,KAAL,KAAa;AAEzB,wBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAgC,MAAA,GAAG,EAAED,GAArC;AAA0C,MAAA,GAAG,EAAEL,eAA/C;AAAgE,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAC,MAAT;AAAiBC,QAAAA,aAAa,EAAC,KAA/B;AAAqCC,QAAAA,KAAK,EAAC,MAA3C;AAAmDI,QAAAA,UAAU,EAAC,QAA9D;AAAuEE,QAAAA,MAAM,EAAC,GAA9E;AAAkFC,QAAAA,OAAO,EAAC;AAA1F,OAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA;AAAG,MAAA,KAAK,EAAE;AAACD,QAAAA,MAAM,EAAC,KAAR;AAAcC,QAAAA,OAAO,EAAC,KAAtB;AAA4BG,QAAAA,QAAQ,EAAC,MAArC;AAA4CF,QAAAA,KAAK,EAAC;AAAlD,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwEN,GAAxE,CAFA,CAFA,eAQA;AAEA,MAAA,SAAS,EAAC,OAFV;AAGA,MAAA,KAAK,EAAE;AAACF,QAAAA,KAAK,EAAE,GAAEE,GAAG,GAAC,CAAE,IAAhB;AAAqBhB,QAAAA,eAAe,EAAC,OAArC;AAA6CyB,QAAAA,UAAU,EAAC,KAAxD;AAA8DJ,QAAAA,OAAO,EAAC,GAAtE;AAA0EF,QAAAA,MAAM,EAAC;AAAjF,OAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARA,CADJ;AAoBC,GAtBA,CAFL,CAtCG,CADF;AAqED;;AAED,eAAelD,MAAf","sourcesContent":["import React,{useEffect,useRef,useState}  from 'react';\r\nimport {gsap} from 'gsap';\r\nimport '../App.css';\r\n\r\n\r\nconst randomListOfNums =(n)=>\r\n{\r\n    const nums = [];\r\n\r\n    for( let i =0; i<n; i++)\r\n    {\r\n        let randomNum = Math.floor(Math.random() * 25) + 1;\r\n\r\n        nums.push(randomNum);\r\n\r\n    }\r\n\r\n    return nums;   \r\n\r\n}\r\n\r\nfunction Bubble() {\r\n\r\n    const [values, setValues] = useState(randomListOfNums(5))\r\n\r\n    const [mobileValues, setMobileValues] = useState(randomListOfNums(5))\r\n\r\n    const revealsRef = React.useRef([]);\r\n\r\n    let newArrayState =  revealsRef.current = []\r\n\r\n    // const [revealsRefs,setRevealsRefs] = useState(newArrayState);\r\n\r\n\r\n     console.log(values,\"values\")\r\n\r\n\r\n\r\n    // revealsRefs = [];\r\n\r\n    const revealsRefMobile= React.useRef([]);\r\n    revealsRefMobile.current = [];\r\n\r\n\r\n\r\n\r\n\r\n    const useEffect=(()=>\r\n    {\r\n\r\n\r\n      \r\n\r\n    },[values]);\r\n\r\n\r\n\r\n      \r\nconst  bubbleSort = async () =>\r\n{\r\n\r\n\r\n// const masterTimeLine = gsap.timeline()\r\n\r\nvar swapped = true;\r\n\r\n  \twhile (swapped){\r\n\r\n    swapped = false;\r\n\r\n\r\n\r\n\r\n\t\tfor(var i=0 ; i<values.length-1; i++){\r\n\r\n      let num1 = Number(values[i]);\r\n\r\n      let num2 = Number(values[i+1]);\r\n\r\n\r\n      // console.log(revealsRefs,\"valuesbefore\")\r\n\t\t\tif( num1 > num2){\r\n\r\n     \r\n\r\n\r\n        await iterationanimation(i,i+1);\r\n\r\n\r\n\r\n        \r\n      \r\n        // let arrCopyRefs = [...newArrayState]\r\n\r\n        // var temp = arrCopyRefs[i];\r\n\r\n        // arrCopyRefs[i] = arrCopyRefs[i+1]\r\n\r\n        // arrCopyRefs[i+1] = temp\r\n\r\n        // swapped = true;\r\n\r\n\r\n        // console.log(revealsRefs,\"valuesafter\")\r\n\r\n      }else\r\n      {\r\n         await iterationanimationNoSwap(i,i+1);\r\n      }\r\n \r\n\r\n    }\r\n\r\n  }\r\n\r\n  console.log(values,\"values\")\r\n  // onAnimateFloopfy();\r\n\r\n\r\n}\r\n\r\nconst iterationanimationNoSwap= (current,next)=>{\r\n\r\n\r\n\r\n        const rect = newArrayState[current].getBoundingClientRect();\r\n        console.log(rect.top, rect.right, rect.bottom, rect.left)\r\n\r\n        const rect2 = newArrayState[next].getBoundingClientRect();\r\n        console.log(rect2.top, rect2.right, rect2.bottom, rect2.left)\r\n\r\n        let tl = gsap.timeline({autoRemoveChildren: true}); \r\n\r\n         tl.to(newArrayState[current], {backgroundColor:\"blue\"})\r\n        .to(newArrayState[next], .5, {backgroundColor:\"blue\"})\r\n        \r\n        .to(newArrayState[current], 0.1, {backgroundColor:\"blue\",y: 400,delay: 0.5})\r\n        .to(newArrayState[next], 0.1, {backgroundColor:\"blue\",y: 400,delay: 0.5})\r\n\r\n        .to(newArrayState[current], 0.1, {y: -(rect2.bottom-rect2.top+ newArrayState[next]),delay: 0.5,backgroundColor:\"cadetblue\"})\r\n        .to(newArrayState[next], 0.1, {y: -(rect.bottom-rect.top +newArrayState[current]),delay: 0.5,backgroundColor:\"cadetblue\"})\r\n\r\n        return tl;\r\n\r\n\r\n        \r\n}\r\n\r\n\r\nconst iterationanimation= (current,next)=>{\r\n\r\nconsole.log(\"hitting\")\r\n\r\n  const rect = newArrayState[current].getBoundingClientRect();\r\n  const rect2 = newArrayState[next].getBoundingClientRect();\r\n\r\n  let tl2 = gsap.timeline({autoRemoveChildren: true}); \r\n\r\n  tl2.to(newArrayState[current], {backgroundColor:\"blue\"})\r\n  .to(newArrayState[next], .5, {backgroundColor:\"blue\"})\r\n  \r\n  .to(newArrayState[current], 0.1, {backgroundColor:\"blue\",y: 400,delay: 0.5})\r\n  .to(newArrayState[next], 0.1, {backgroundColor:\"blue\",y: 400,delay: 0.5})\r\n\r\n  .to(newArrayState[current], 0.1, {x:  (rect2.right-rect.right),delay: 0.5},\"-=.5\")\r\n  .to(newArrayState[next], 0.1, {x: -(rect2.right-rect.right),delay: 0.5},\"-=.5\")\r\n  \r\n  .to(newArrayState[current], 0.1, {y: -(rect2.bottom-rect2.top+ newArrayState[next]),delay: 0.5,backgroundColor:\"cadetblue\"})\r\n  .to(newArrayState[next], 0.1, {y: -(rect.bottom-rect.top +newArrayState[current]),delay: 0.5,backgroundColor:\"cadetblue\"})\r\n\r\n\r\n       let arrCopy1 = [...values]\r\n\r\n        var temp = arrCopy1[current];\r\n\r\n        arrCopy1[i] = arrCopy1[i+1]\r\n\r\n        arrCopy1[i+1] = temp\r\n        \r\n        setValues(arrCopy1)\r\n\r\n\r\n\r\n  return tl2;\r\n\r\n}\r\n\r\n\r\n\r\nconst initialize  = ()=>{\r\n\r\nbubbleSort();\r\n\r\n}\r\n\r\n\r\nconst addToRefs = (el) =>\r\n{\r\n\r\n    if(el && !newArrayState.includes(el))\r\n    {\r\n      newArrayState.push(el);\r\n    }\r\n\r\n}\r\n\r\nconst addToRefsMobile = (el) =>\r\n{\r\n\r\n    if(el && !revealsRefMobile.current.includes(el))\r\n    {\r\n        revealsRefMobile.current.push(el);\r\n    }\r\n}\r\n\r\n\r\n// const onAnimate1 = () => {\r\n\r\n\r\n//         const rect = revealsRefs.current[0].getBoundingClientRect();\r\n//         console.log(rect.top, rect.right, rect.bottom, rect.left)\r\n\r\n//         const rect2 = revealsRefs.current[10].getBoundingClientRect();\r\n//         console.log(rect2.top, rect2.right, rect2.bottom, rect2.left)\r\n\r\n//         let tl = gsap.timeline(); \r\n\r\n//         let another = gsap.timeline();\r\n\r\n//         tl.to(revealsRefs.current[0], {backgroundColor:\"blue\"})\r\n//         .to(revealsRefs.current[10], 1, {backgroundColor:\"blue\"})\r\n        \r\n//         .to(revealsRefs.current[0], 0.9, {backgroundColor:\"blue\",y: 400,delay: 0.5})\r\n//         .to(revealsRefs.current[10], 0.9, {backgroundColor:\"blue\",y: 400,delay: 0.5})\r\n    \r\n//         .to(revealsRefs.current[0], 0.9, {x:  (rect2.right-rect.right),delay: 0.5},\"-=.5\")\r\n//         .to(revealsRefs.current[10], 0.9, {x: -(rect2.right-rect.right) ,delay: 0.5},\"-=.5\")\r\n        \r\n//         .to(revealsRefs.current[0], 0.9, {y: -(rect2.bottom-rect2.top+ revealsRefs.current[10]),delay: 0.5,backgroundColor:\"cadetblue\"})\r\n//         .to(revealsRefs.current[10], 0.9, {y: -(rect.bottom-rect.top +revealsRefs.current[0]),delay: 0.5,backgroundColor:\"cadetblue\"});\r\n    \r\n        \r\n\r\n\r\n\r\n// }\r\n\r\n\r\n\r\n// const onAnimate2 = () => {\r\n\r\n\r\n\r\n//     const rect = revealsRefMobile.current[0].getBoundingClientRect();\r\n//     console.log(rect.top, rect.right, rect.bottom, rect.left)\r\n\r\n//     const rect2 = revealsRefMobile.current[10].getBoundingClientRect();\r\n//     console.log(rect2.top, rect2.right, rect2.bottom, rect2.left)\r\n\r\n\r\n//     let tl = gsap.timeline(); \r\n\r\n\r\n//     tl.to(revealsRefs[0], {backgroundColor:\"blue\"})\r\n//     .to(revealsRefs[10], 1, {backgroundColor:\"blue\"})\r\n    \r\n    \r\n//     .to(revealsRefMobile.current[0], 0.9, {x: 200,delay: 0.5,backgroundColor:\"blue\"})\r\n//     .to(revealsRefMobile.current[10], 0.9, {x: 200,delay: 0.5,backgroundColor:\"blue\"})\r\n\r\n//     .to(revealsRefMobile.current[0],  0.9,{y:  (rect2.bottom-rect.bottom),delay: 0.5},\"-=.5\")\r\n//     .to(revealsRefMobile.current[10],  0.9,{y: -(rect2.bottom-rect.bottom) ,delay: 0.5},\"-=.5\")\r\n    \r\n//     .to(revealsRefMobile.current[0], 0.9, {x: -(rect2.bottom-rect2.top+ revealsRefMobile.current[10]),delay: 0.5,backgroundColor:\"cadetblue\"})\r\n//     .to(revealsRefMobile.current[10], 0.9, {x: -(rect.bottom-rect.top +revealsRefs[0]),delay: 0.5,backgroundColor:\"cadetblue\"});\r\n\r\n\r\n\r\n\r\n\r\n// }\r\n\r\n\r\n\r\n// const onAnimateFloopfy = () => {\r\n\r\n\r\n//   let tl = gsap.timeline(); \r\n\r\n\r\n//   for(let i = 0 ;i<revealsRefs.length;i++)\r\n//   {\r\n      \r\n//       tl.to(revealsRefs[i], 0.1, {y: 100,duration:2})\r\n//       .to(revealsRefs[i], 0.1, {y: -10,duration:2});\r\n//   }\r\n\r\n  \r\n//   for(let i = 0 ;i<revealsRefs.length;i++)\r\n//   {\r\n      \r\n//       tl.to(revealsRefs[i], 0.01, {y: 100,duration:2})\r\n//       .to(revealsRefs[i], 0.01, {y: -10,duration:2});\r\n\r\n//   }\r\n\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"insertion\" >\r\n\r\n    <p >Insertion Sort</p>\r\n\r\n    <button onClick={initialize}>Run1</button>\r\n\r\n<button >Run2</button>\r\n\r\n <section className=\"blocksNumberWeb\" style={{display:\"flex\", flexDirection:\"row\",width:\"1200px\"}}>\r\n\r\n  {values.map((num,index)=>{\r\n\r\n     return (\r\n         <div className=\"blocksNumber\"  key={num} ref={addToRefs}  style={{display:\"flex\", flexDirection:\"column\",width:\"100%\",alignItems:\"center\",height:\"100vh\"}}>\r\n\r\n         \r\n         <div>\r\n\r\n         <p style={{margin:\"1px\",padding:\"1px\",color:\"white\"}} >{num}</p>\r\n\r\n         </div>\r\n\r\n         <div \r\n        \r\n         className=\"block\"\r\n         style={{height:`${num*10}px`, backgroundColor:\"ivory\",margin:\"5px\",width:\"80%\"}}\r\n     \r\n  \r\n         >\r\n\r\n         </div>\r\n         </div>\r\n     )\r\n\r\n  })}\r\n\r\n </section>\r\n\r\n <section className=\"blocksNumberMobile\" style={{display:\"flex\", flexDirection:\"column\",width:\"100vw\",justifyContent:\"center\",alignItems:\"center\" }}>\r\n\r\n     {values.map((num,index)=>{\r\n\r\n     return (\r\n         <div className=\"blocksNumber\"   key={num} ref={addToRefsMobile} style={{display:\"flex\", flexDirection:\"row\",width:\"100%\", alignItems:\"center\",margin:\"0\",padding:\"0\"}}>\r\n\r\n         <div >\r\n\r\n         <p style={{margin:\"2px\",padding:\"2px\",fontSize:\"11px\",color:\"white\"}} >{num}</p>\r\n\r\n         </div>\r\n\r\n         <div \r\n\r\n         className=\"block\"\r\n         style={{width:`${num*6}px`, backgroundColor:\"ivory\",marginLeft:\"5px\",padding:\"0\",height:\"10px\"}}\r\n         \r\n         >\r\n             \r\n         </div>\r\n         </div>\r\n     )\r\n\r\n     })}\r\n\r\n</section>\r\n\r\n</div>\r\n  );\r\n}\r\n\r\nexport default Bubble;\r\n"]},"metadata":{},"sourceType":"module"}