{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Roger\\\\Code\\\\Projects\\\\sortingRepo\\\\sorting\\\\src\\\\components\\\\Insertion.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport '../App.css';\nimport { gsap } from 'gsap';\n\nconst randomListOfNums = n => {\n  const nums = [];\n\n  for (let i = 0; i < n; i++) {\n    let randomNum = Math.floor(Math.random() * 20) + 1;\n    nums.push(randomNum);\n  }\n\n  return nums;\n};\n\nfunction Insertion() {\n  const [values, setValues] = useState(randomListOfNums(20));\n  const [mobileValues, setMobileValues] = useState(randomListOfNums(20));\n  const revealsRef = React.useRef([]);\n  revealsRef.current = [];\n  const revealsRefMobile = React.useRef([]);\n  revealsRefMobile.current = [];\n  const useEffect = (() => {}, []);\n\n  const addToRefs = el => {\n    if (el && !revealsRef.current.includes(el)) {\n      revealsRef.current.push(el);\n    }\n  };\n\n  const addToRefsMobile = el => {\n    if (el && !revealsRefMobile.current.includes(el)) {\n      revealsRefMobile.current.push(el);\n    }\n  };\n\n  const onAnimate1 = () => {\n    const rect = revealsRef.current[0].getBoundingClientRect();\n    console.log(rect.top, rect.right, rect.bottom, rect.left);\n    const rect2 = revealsRef.current[10].getBoundingClientRect();\n    console.log(rect2.top, rect2.right, rect2.bottom, rect2.left);\n    let tl = gsap.timeline();\n    let another = gsap.timeline();\n    tl.to(revealsRef.current[0], 0.9, {\n      y: 400,\n      delay: 0.5,\n      backgroundColor: \"red\"\n    }).to(revealsRef.current[10], 0.9, {\n      y: 400,\n      delay: 0.5,\n      backgroundColor: \"red\"\n    }).to(revealsRef.current[0], 0.9, {\n      x: rect2.right - rect.right,\n      delay: 0.5\n    });\n    another.to(revealsRef.current[10], 0.9, {\n      x: -(rect2.right - rect.right),\n      delay: 0.5\n    }).to(revealsRef.current[0], 0.9, {\n      y: -(rect2.bottom - rect2.top + revealsRef.current[10]),\n      delay: 0.5,\n      backgroundColor: \"white\"\n    }).to(revealsRef.current[10], 0.9, {\n      y: -(rect.bottom - rect.top + revealsRef.current[0]),\n      delay: 0.5,\n      backgroundColor: \"white\"\n    });\n  };\n\n  const onAnimate2 = () => {\n    const rect = revealsRefMobile.current[0].getBoundingClientRect();\n    console.log(rect.top, rect.right, rect.bottom, rect.left);\n    const rect2 = revealsRefMobile.current[10].getBoundingClientRect();\n    console.log(rect2.top, rect2.right, rect2.bottom, rect2.left);\n    let tl = gsap.timeline();\n    tl.to(revealsRefMobile.current[0], 0.9, {\n      x: 200,\n      delay: 0.5,\n      backgroundColor: \"red\"\n    }).to(revealsRefMobile.current[10], 0.9, {\n      x: 200,\n      delay: 0.5,\n      backgroundColor: \"red\"\n    }).to(revealsRefMobile.current[0], 0.9, {\n      y: rect2.bottom - rect.bottom,\n      delay: 0.5\n    }).to(revealsRefMobile.current[10], 0.9, {\n      y: -(rect2.bottom - rect.bottom),\n      delay: 0.5\n    }).to(revealsRefMobile.current[0], 0.9, {\n      x: -(rect2.bottom - rect2.top + revealsRefMobile.current[10]),\n      delay: 0.5,\n      backgroundColor: \"white\"\n    }).to(revealsRefMobile.current[10], 0.9, {\n      x: -(rect.bottom - rect.top + revealsRef.current[0]),\n      delay: 0.5,\n      backgroundColor: \"white\"\n    });\n  }; // const onAnimate = () => {\n  //     let tl = gsap.timeline(); \n  //     for(let i = 0 ;i<revealsRef.current.length;i++)\n  //     {\n  //         tl.to(revealsRef.current[i], 0.1, {y: 100,backgroundColor:\"red\",duration:2})\n  //         .to(revealsRef.current[i], 0.1, {y: -10,backgroundColor:\"white\",duration:2});\n  //     }\n  //     for(let i = 0 ;i<revealsRef.current.length;i++)\n  //     {\n  //         tl.to(revealsRef.current[i], 0.01, {y: 100,backgroundColor:\"red\",duration:2})\n  //         .to(revealsRef.current[i], 0.01, {y: -10,backgroundColor:\"white\",duration:2});\n  //     }\n  // }\n  // const onAnimateMobile = () => {\n  //     let tl = gsap.timeline(); \n  //     for(let i = 0 ;i<revealsRefMobile.current.length;i++)\n  //     {\n  //         tl.to(revealsRefMobile.current[i], 0.1, {x: 100,backgroundColor:\"red\",duration:2})\n  //         .to(revealsRefMobile.current[i], 0.1, {x: -10,backgroundColor:\"white\",duration:2});\n  //     }\n  //     for(let i = 0 ;i<revealsRefMobile.current.length;i++)\n  //     {\n  //         tl.to(revealsRefMobile.current[i], 0.01, {x: 100,backgroundColor:\"red\",duration:2})\n  //         .to(revealsRefMobile.current[i], 0.01, {x: -10,backgroundColor:\"white\",duration:2});\n  //     }\n  // }\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"insertion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 12\n    }\n  }, \"Insertion Sort\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onAnimate1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 12\n    }\n  }, \"Run1\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onAnimate2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 6\n    }\n  }, \"Run2\"), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"blocksNumberWeb\",\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      width: \"1200px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, values.map((num, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"blocksNumber\",\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"100%\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        margin: \"1px\",\n        padding: \"1px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }\n    }, num)), /*#__PURE__*/React.createElement(\"div\", {\n      key: num,\n      ref: addToRefs,\n      className: \"block\",\n      style: {\n        height: `${num * 10}px`,\n        backgroundColor: \"ivory\",\n        margin: \"5px\",\n        width: \"80%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }\n    }));\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"blocksNumberMobile\",\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      width: \"100vw\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }\n  }, values.map((num, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"blocksNumber\",\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        width: \"100%\",\n        alignItems: \"center\",\n        margin: \"0\",\n        padding: \"0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"10%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        margin: \"2px\",\n        padding: \"2px\",\n        fontSize: \"11px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }\n    }, num)), /*#__PURE__*/React.createElement(\"div\", {\n      key: num,\n      ref: addToRefsMobile,\n      className: \"block\",\n      style: {\n        width: `${num * 6}px`,\n        backgroundColor: \"ivory\",\n        marginLeft: \"5px\",\n        padding: \"0\",\n        height: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }\n    }));\n  })));\n}\n\nexport default Insertion;","map":{"version":3,"sources":["C:/Users/Roger/Code/Projects/sortingRepo/sorting/src/components/Insertion.js"],"names":["React","useEffect","useRef","useState","gsap","randomListOfNums","n","nums","i","randomNum","Math","floor","random","push","Insertion","values","setValues","mobileValues","setMobileValues","revealsRef","current","revealsRefMobile","addToRefs","el","includes","addToRefsMobile","onAnimate1","rect","getBoundingClientRect","console","log","top","right","bottom","left","rect2","tl","timeline","another","to","y","delay","backgroundColor","x","onAnimate2","display","flexDirection","width","map","num","index","alignItems","margin","padding","height","justifyContent","fontSize","marginLeft"],"mappings":"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","sourcesContent":["import React ,{useEffect,useRef,useState} from 'react';\r\nimport '../App.css';\r\nimport {gsap} from 'gsap';\r\n\r\n\r\nconst randomListOfNums =(n)=>\r\n{\r\n    const nums = [];\r\n\r\n    for( let i =0; i<n; i++)\r\n    {\r\n        let randomNum = Math.floor(Math.random() * 20) + 1;\r\n\r\n        nums.push(randomNum);\r\n\r\n    }\r\n\r\n    return nums;   \r\n\r\n}\r\n\r\n\r\nfunction Insertion() {\r\n\r\n    const [values, setValues] = useState(randomListOfNums(20))\r\n    const [mobileValues, setMobileValues] = useState(randomListOfNums(20))\r\n\r\n\r\n    const revealsRef = React.useRef([]);\r\n    revealsRef.current = [];\r\n\r\n    const revealsRefMobile= React.useRef([]);\r\n    revealsRefMobile.current = [];\r\n\r\n\r\n\r\n    const useEffect=(()=>\r\n    {\r\n\r\n    \r\n\r\n\r\n    },[]);\r\n\r\n\r\nconst addToRefs = (el) =>\r\n{\r\n\r\n    if(el && !revealsRef.current.includes(el))\r\n    {\r\n        revealsRef.current.push(el);\r\n    }\r\n\r\n}\r\n\r\nconst addToRefsMobile = (el) =>\r\n{\r\n\r\n    if(el && !revealsRefMobile.current.includes(el))\r\n    {\r\n        revealsRefMobile.current.push(el);\r\n    }\r\n}\r\n\r\n\r\nconst onAnimate1 = () => {\r\n\r\n\r\n        const rect = revealsRef.current[0].getBoundingClientRect();\r\n        console.log(rect.top, rect.right, rect.bottom, rect.left)\r\n\r\n        const rect2 = revealsRef.current[10].getBoundingClientRect();\r\n        console.log(rect2.top, rect2.right, rect2.bottom, rect2.left)\r\n\r\n        let tl = gsap.timeline(); \r\n\r\n        let another = gsap.timeline();\r\n\r\n        tl.to(revealsRef.current[0], 0.9, {y: 400,delay: 0.5,backgroundColor:\"red\"})\r\n        .to(revealsRef.current[10], 0.9, {y: 400,delay: 0.5,backgroundColor:\"red\"})\r\n    \r\n        .to(revealsRef.current[0], 0.9, {x:  (rect2.right-rect.right),delay: 0.5})\r\n        another.to(revealsRef.current[10], 0.9, {x: -(rect2.right-rect.right) ,delay: 0.5})\r\n        \r\n        .to(revealsRef.current[0], 0.9, {y: -(rect2.bottom-rect2.top+ revealsRef.current[10]),delay: 0.5,backgroundColor:\"white\"})\r\n        .to(revealsRef.current[10], 0.9, {y: -(rect.bottom-rect.top +revealsRef.current[0]),delay: 0.5,backgroundColor:\"white\"});\r\n    \r\n\r\n    \r\n   \r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nconst onAnimate2 = () => {\r\n\r\n\r\n\r\n    const rect = revealsRefMobile.current[0].getBoundingClientRect();\r\n    console.log(rect.top, rect.right, rect.bottom, rect.left)\r\n\r\n    const rect2 = revealsRefMobile.current[10].getBoundingClientRect();\r\n    console.log(rect2.top, rect2.right, rect2.bottom, rect2.left)\r\n\r\n\r\n    let tl = gsap.timeline(); \r\n\r\n\r\n    tl.to(revealsRefMobile.current[0], 0.9, {x: 200,delay: 0.5,backgroundColor:\"red\"})\r\n    .to(revealsRefMobile.current[10], 0.9, {x: 200,delay: 0.5,backgroundColor:\"red\"})\r\n\r\n    .to(revealsRefMobile.current[0], 0.9, {y:  (rect2.bottom-rect.bottom),delay: 0.5})\r\n    .to(revealsRefMobile.current[10], 0.9, {y: -(rect2.bottom-rect.bottom) ,delay: 0.5})\r\n    \r\n    .to(revealsRefMobile.current[0], 0.9, {x: -(rect2.bottom-rect2.top+ revealsRefMobile.current[10]),delay: 0.5,backgroundColor:\"white\"})\r\n    .to(revealsRefMobile.current[10], 0.9, {x: -(rect.bottom-rect.top +revealsRef.current[0]),delay: 0.5,backgroundColor:\"white\"});\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n// const onAnimate = () => {\r\n\r\n\r\n//     let tl = gsap.timeline(); \r\n  \r\n\r\n//     for(let i = 0 ;i<revealsRef.current.length;i++)\r\n//     {\r\n        \r\n//         tl.to(revealsRef.current[i], 0.1, {y: 100,backgroundColor:\"red\",duration:2})\r\n//         .to(revealsRef.current[i], 0.1, {y: -10,backgroundColor:\"white\",duration:2});\r\n//     }\r\n\r\n    \r\n//     for(let i = 0 ;i<revealsRef.current.length;i++)\r\n//     {\r\n        \r\n//         tl.to(revealsRef.current[i], 0.01, {y: 100,backgroundColor:\"red\",duration:2})\r\n//         .to(revealsRef.current[i], 0.01, {y: -10,backgroundColor:\"white\",duration:2});\r\n\r\n//     }\r\n\r\n// }\r\n\r\n\r\n\r\n// const onAnimateMobile = () => {\r\n\r\n//     let tl = gsap.timeline(); \r\n\r\n//     for(let i = 0 ;i<revealsRefMobile.current.length;i++)\r\n//     {\r\n        \r\n//         tl.to(revealsRefMobile.current[i], 0.1, {x: 100,backgroundColor:\"red\",duration:2})\r\n//         .to(revealsRefMobile.current[i], 0.1, {x: -10,backgroundColor:\"white\",duration:2});\r\n\r\n//     }\r\n\r\n//     for(let i = 0 ;i<revealsRefMobile.current.length;i++)\r\n//     {\r\n        \r\n//         tl.to(revealsRefMobile.current[i], 0.01, {x: 100,backgroundColor:\"red\",duration:2})\r\n//         .to(revealsRefMobile.current[i], 0.01, {x: -10,backgroundColor:\"white\",duration:2});\r\n\r\n//     }\r\n\r\n// }\r\n\r\n\r\n\r\n   \r\n  return (\r\n    <div className=\"insertion\" >\r\n\r\n           <p >Insertion Sort</p>\r\n\r\n           <button onClick={onAnimate1}>Run1</button>\r\n\r\n     <button onClick={onAnimate2}>Run2</button>\r\n\r\n        <section className=\"blocksNumberWeb\" style={{display:\"flex\", flexDirection:\"row\",width:\"1200px\"}}>\r\n\r\n         {values.map((num,index)=>{\r\n\r\n            return (\r\n                <div className=\"blocksNumber\"  style={{display:\"flex\", flexDirection:\"column\",width:\"100%\",alignItems:\"center\"}}>\r\n\r\n                \r\n                <div>\r\n\r\n                <p style={{margin:\"1px\",padding:\"1px\"}} >{num}</p>\r\n\r\n                </div>\r\n\r\n                <div \r\n                key={num}\r\n                ref={addToRefs}\r\n                className=\"block\"\r\n                style={{height:`${num*10}px`, backgroundColor:\"ivory\",margin:\"5px\",width:\"80%\"}}\r\n            \r\n                >\r\n                    \r\n                </div>\r\n                </div>\r\n            )\r\n\r\n         })}\r\n\r\n        </section>\r\n\r\n        <section className=\"blocksNumberMobile\" style={{display:\"flex\", flexDirection:\"column\",width:\"100vw\",justifyContent:\"center\",alignItems:\"center\" }}>\r\n\r\n            {values.map((num,index)=>{\r\n\r\n            return (\r\n                <div className=\"blocksNumber\"  style={{display:\"flex\", flexDirection:\"row\",width:\"100%\", alignItems:\"center\",margin:\"0\",padding:\"0\"}}>\r\n\r\n                <div style={{width:\"10%\"}}>\r\n\r\n                <p style={{margin:\"2px\",padding:\"2px\",fontSize:\"11px\"}} >{num}</p>\r\n\r\n                </div>\r\n\r\n                <div \r\n                key={num}\r\n                ref={addToRefsMobile}\r\n                className=\"block\"\r\n                style={{width:`${num*6}px`, backgroundColor:\"ivory\",marginLeft:\"5px\",padding:\"0\",height:\"10px\"}}\r\n                \r\n                >\r\n                    \r\n                    \r\n                </div>\r\n                </div>\r\n            )\r\n\r\n            })}\r\n\r\n</section>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Insertion;\r\n"]},"metadata":{},"sourceType":"module"}